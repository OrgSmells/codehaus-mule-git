<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.mule</groupId>
        <artifactId>mule</artifactId>
        <version>2.0-REGISTRY</version>
    </parent>
    <artifactId>mule-core</artifactId>
    <packaging>osgi-bundle</packaging>
    <name>Mule Core</name>
    <description>Mule server and core classes</description>
    <url>http://mule.mulesource.org</url>

    <build>
     	<plugins>
	      	<plugin>
		        <groupId>org.apache.felix.plugins</groupId>
		        <artifactId>maven-osgi-plugin</artifactId>
		        <configuration>
		            <osgiManifest>
		            	<!-- TODO This list should ideally be in MANIFEST.MF, but the maven-osgi-plugin can't handle it because it's too long. -->
						<importPackage>org.apache.commons.logging;provider=paxlogging, edu.emory.mathcs.backport.java.util.concurrent, edu.emory.mathcs.backport.java.util.concurrent.atomic, org.apache.commons.beanutils, org.apache.commons.collections, org.apache.commons.collections.list, org.apache.commons.collections.map, org.apache.commons.lang, org.apache.commons.lang.math, org.apache.commons.lang.time, org.apache.commons.pool, org.apache.commons.pool.impl, org.apache.log4j, org.apache.log4j.xml, org.xml.sax</importPackage>
						<!-- org.springframework.core, org.springframework.core.annotation, org.springframework.core.io, org.springframework.core.io.support, org.springframework.util, org.springframework.util.xml -->
						<exportPackage>org.mule, org.mule.interceptors, org.mule.transaction, org.mule.transaction.constraints, org.mule.transaction.lookup, org.mule.components.builder, org.mule.components.simple, org.mule.components.rest, org.mule.transformers, org.mule.transformers.compression, org.mule.transformers.wire, org.mule.transformers.simple, org.mule.transformers.encryption, org.mule.transformers.codec, org.mule.routing, org.mule.routing.outbound, org.mule.routing.filters, org.mule.routing.filters.logic, org.mule.routing.inbound, org.mule.routing.response, org.mule.model, org.mule.umo, org.mule.umo.endpoint, org.mule.umo.routing, org.mule.umo.provider, org.mule.umo.lifecycle, org.mule.umo.model, org.mule.umo.transformer, org.mule.umo.security, org.mule.umo.security.provider, org.mule.umo.manager, org.mule.impl, org.mule.impl.endpoint, org.mule.impl.container, org.mule.impl.work, org.mule.impl.jndi, org.mule.impl.message, org.mule.impl.model, org.mule.impl.model.pipeline, org.mule.impl.model.direct, org.mule.impl.model.seda, org.mule.impl.model.seda.optimised, org.mule.impl.security, org.mule.impl.security.filters, org.mule.impl.internal.admin, org.mule.impl.internal.notifications, org.mule.config, org.mule.config.factories, org.mule.config.i18n, org.mule.config.converters, org.mule.config.builders, org.mule.config.pool, org.mule.registry, org.mule.registry.impl, org.mule.providers, org.mule.providers.streaming, org.mule.providers.service, org.mule.util, org.mule.util.concurrent, org.mule.util.xa, org.mule.util.file, org.mule.util.timer, org.mule.util.queue, org.mule.util.monitor, org.mule.util.properties, org.mule.util.compression, org.mule.util.counters, org.mule.util.counters.impl</exportPackage>
   		            </osgiManifest>
		        </configuration>
		    </plugin>
     	</plugins>
    </build>
    
    <dependencies>
        <!--
        Specs - These J2EE specs are used to compile against but their actual 
                implementation will depend on the resources available to Mule 
                at run-time.
        -->
        <!-- UMOMesage attachment support; not needed for JDK 6 -->
        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
            <version>1.1</version>
        </dependency>
        <!-- Used for the WorkManager API & for the Mule RA -->
        <dependency>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-j2ee-connector_1.5_spec</artifactId>
            <version>1.0.1</version>
        </dependency>
        <!-- Used for Transactions -->
        <dependency>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-jta_1.0.1B_spec</artifactId>
            <version>1.0.1</version>
        </dependency>

        <!-- UUID generator, only called directly by mule-core -->
        <dependency>
            <groupId>org.safehaus.jug</groupId>
            <artifactId>jug</artifactId>
            <version>2.0.0</version>
            <classifier>asl</classifier>
        </dependency>

		<!-- Needed for Log4jNotificationLoggerAgent -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.13</version>
            <scope>provided</scope>
        </dependency>

		<!-- Note: Ideally, the following list of libraries should be in the Mule project's top-level 
			POM, but Maven has visibility problems when dependencies are more than 2 levels 
			away, so this list is repeated in core/pom.xml, modules/pom.xml, and transports/pom.xml -->
			
		<!-- The following libraries are provided by separate OSGi bundles -->
        <dependency>
            <groupId>backport-util-concurrent</groupId>
            <artifactId>backport-util-concurrent</artifactId>
            <version>3.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.7.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>3.2</version>
            <scope>provided</scope>
        </dependency>
        <!-- TODO This needs to be a bundle -->
        <dependency>
            <groupId>commons-discovery</groupId>
            <artifactId>commons-discovery</artifactId>
            <version>0.2</version>
        </dependency>
        <!-- TODO This needs to be a bundle -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.2</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.0.4</version>
            <scope>provided</scope>
        </dependency>
        <!-- Used by mules default component pooling mechanism -->
        <dependency>
            <groupId>commons-pool</groupId>
            <artifactId>commons-pool</artifactId>
            <version>1.3</version>
            <scope>provided</scope>
        </dependency>

        <!-- Although there are no tests to run, we need to include this otherwise we'll get a
            "No Java test frameworks found" error when building. -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!-- no build is complete without XML -->
    <profiles>
        <profile>
            <id>java14</id>
            <activation>
                <jdk>1.4</jdk>
            </activation>
            <dependencies>
                <!--
                Sun's 1.4.x JVMs come with a bundled Crimson XML parser.
                Unfortunately it is very buggy and does not support validation
                against an XML Schema, so we have to unconditionally include
                both xml-apis and xerces (in matching versions!) for JDK 1.4.
                -->
                <dependency>
                    <groupId>xml-apis</groupId>
                    <artifactId>xml-apis</artifactId>
                    <version>1.3.03</version>
		            <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>xerces</groupId>
                    <artifactId>xercesImpl</artifactId>
                    <version>2.8.1</version>
		            <scope>provided</scope>
                </dependency>
            </dependencies>
        </profile>
        <!-- no need for a jdk5 profile since we don't have to exclude anything -->
    </profiles>
</project>

