<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesource.org/schema/mule/core/2.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:spring="http://www.springframework.org/schema/beans"
       xmlns:axis="http://www.mulesource.org/schema/mule/axis/2.0"
       xmlns:test="http://www.mulesource.org/schema/mule/test/2.0"
       xmlns:vm="http://www.mulesource.org/schema/mule/vm/2.0"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.mulesource.org/schema/mule/core/2.0 http://www.mulesource.org/schema/mule/core/2.0/mule.xsd
       http://www.mulesource.org/schema/mule/axis/2.0 http://www.mulesource.org/schema/mule/axis/2.0/mule-axis.xsd
       http://www.mulesource.org/schema/mule/test/2.0 http://www.mulesource.org/schema/mule/test/2.0/mule-test.xsd
       http://www.mulesource.org/schema/mule/vm/2.0 http://www.mulesource.org/schema/mule/vm/2.0/mule-vm.xsd">

    <vm:connector name="VMConnector"/>
    
    <vm:connector name="VMQueue" queueEvents="true"/>
    
    <spring:bean id="Wrapper1" class="org.mule.transport.soap.WebServiceWrapperComponent">
        <spring:property name="webServiceUrl" value="axis:http://localhost:65081/services/TestUMO?method=receive"/>
        <spring:property name="wrapperProperties">
            <spring:map>
                <spring:entry key="style" value="wrapped"/>
                <spring:entry key="use" value="Literal"/>
            </spring:map>
        </spring:property>
    </spring:bean>   

    <spring:bean id="Wrapper2" class="org.mule.transport.soap.WebServiceWrapperComponent">
        <spring:property name="urlFromMessage" value="true"/>
        <spring:property name="wrapperProperties">
            <spring:map>
                <spring:entry key="style" value="wrapped"/>
                <spring:entry key="use" value="Literal"/>
            </spring:map>
        </spring:property>
    </spring:bean>  

    <spring:bean id="Wrapper3" class="org.mule.transport.soap.WebServiceWrapperComponent">
        <spring:property name="webServiceUrl" value="axis:http://localhost:62088/axis/Calculator?method=add"/>
        <spring:property name="wrapperProperties">
            <spring:map>
                <spring:entry key="style" value="wrapped"/>
                <spring:entry key="use" value="Literal"/>
            </spring:map>
        </spring:property>
         <properties>
             <spring:entry key="soapMethods">
                 <spring:list>
                     <spring:bean class="org.mule.transport.soap.SoapMethod">
                         <!-- the strange qname syntax here will generate a QName instance via a property editor -->
                         <spring:constructor-arg value="qname{add:http://muleumo.org/Calc}"/>
                         <spring:constructor-arg>
                             <spring:list>
                                 <spring:value>Number1;int;in</spring:value>
                                 <spring:value>Number2;int;in</spring:value>
                                 <spring:value>return;int</spring:value>
                             </spring:list>
                         </spring:constructor-arg>
                     </spring:bean>
                 </spring:list>
             </spring:entry>
         </properties>
    </spring:bean> 
            
    <spring:bean id="CalculatorBean" class="org.mule.transport.soap.axis.Calculator">
         <properties>
             <spring:entry key="style" value="document"/>
             <spring:entry key="use" value="literal"/>
             <spring:entry key="soapMethods">
                 <spring:list>
                     <spring:bean class="org.mule.transport.soap.SoapMethod">
                         <!-- the strange qname syntax here will generate a QName instance via a property editor -->
                         <spring:constructor-arg value="qname{add:http://muleumo.org/Calc}"/>
                         <spring:constructor-arg>
                             <spring:list>
                                 <spring:value>Number1;int;in</spring:value>
                                 <spring:value>Number2;int;in</spring:value>
                                 <spring:value>return;int</spring:value>
                             </spring:list>
                         </spring:constructor-arg>
                     </spring:bean>
                 </spring:list>
             </spring:entry>
         </properties>
    </spring:bean> 

    <model name="Sample">

        <service name="WebServiceSample1">
            <inbound>
                <vm:inbound-endpoint path="testin" connector-ref="VMConnector"/>
            </inbound>
            <component>
                <spring-object bean="Wrapper1"/>
            </component>
        </service>
        
        <service name="WebServiceSample2">
            <inbound>
                <vm:inbound-endpoint path="testin2" connector-ref="VMConnector"/>
            </inbound>
            <component>
                <spring-object bean="Wrapper2"/>
            </component>
        </service>
        
        <service name="WebServiceSample3">
            <inbound>
                <vm:inbound-endpoint path="queue.in" connector-ref="VMQueue"/>
            </inbound>
            <component>
                <spring-object bean="Wrapper3"/>
            </component>
            <outbound>
                <outbound-pass-through-router>
                    <vm:outbound-endpoint path="queue.out" connector-ref="VMQueue"/>
                </outbound-pass-through-router>
            </outbound>
        </service>  
        
        <service name="TestUMO">
            <inbound>
                <axis:inbound-endpoint address="http://localhost:65081/services"/>
            </inbound>
            <component class="org.mule.tck.testmodels.services.TestComponent"/>
        </service>

        <service name="Calculator">
            <inbound>
                <axis:inbound-endpoint address="http://localhost:62088/axis"/>
            </inbound>
            <component>
                <spring-object bean="CalculatorBean"/>
            </component>
        </service>
        
    </model>
    
</mule>