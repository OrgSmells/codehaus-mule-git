<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.mule.transports</groupId>
        <artifactId>mule-transports</artifactId>
        <version>2.0-SNAPSHOT</version>
    </parent>
    <artifactId>mule-transport-http</artifactId>
    <packaging>jar</packaging>
    <name>Http Transport</name>
    <description>A Mule transport for Http Connectivity. This transport supplies a simple Http Server implementation.</description>
    <dependencies>
        <dependency>
            <groupId>org.mule.transports</groupId>
            <artifactId>mule-transport-tcp</artifactId>
            <version>${version}</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.3</version>
        </dependency>
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>3.0.1</version>
        </dependency>
        <dependency>
            <groupId>jetty</groupId>
            <artifactId>org.mortbay.jetty</artifactId>
            <version>5.1.10</version>
        </dependency>
        <dependency>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-servlet_2.4_spec</artifactId>
            <version>1.0.1</version>
            <!-- TODO MULE-10221 
                This library causes conflicts when Mule is deployed to a Web/J2EE server but is
                needed otherwise.
            <scope>provided</scope> 
            -->
        </dependency>

        <!--
            TODO this is a hack. Duplicate declaration (original is in the top pom.xml)
            makes me happy to compile when run from the project root folder,
            otherwise it cannot find classes from commons-logging.

            It seems m2 dependency visibility hierarchy is limited to 1 level deep.
        -->
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.0.4</version>
        </dependency>
    </dependencies>
</project>
