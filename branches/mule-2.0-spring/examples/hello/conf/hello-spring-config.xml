<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>
    <!--
    All objects are registered with the MuleManager. The AutowireUMOManagerFactoryBean
    is responsible for determining the UMOManager to implement, creates a default UMOModel
    and autowires the components to the model and all other global objects to the MuleManager.
    -->
    <bean id="muleManager" class="org.mule.config.spring.AutowireUMOManagerFactoryBean">
        <property name="managerId" value="Hello Spring"/>
    </bean>

    <!-- Used to set mule object names to their corresponding bean id -->
    <!--<bean id="muleNameProcessor" class="org.mule.config.spring.MuleObjectNameProcessor"/>-->
    <!--
        The system stream connector is used to send and receive information via the
        System.in and System.out. Note this connector is only really useful for testing
        purposes.
        promptMessage - is what is written to the console
        messageDelayTime - is the time in milliseconds before the user is prompted again.
        These properties are set as bean properties on the connector.
    -->
    <bean id="systemStreamConnector" class="org.mule.providers.stream.SystemStreamConnector">
        <property name="promptMessageCode" value="3"/>
        <property name="resourceBundle" value="hello-example"/>
        <property name="messageDelayTime" value="1000"/>
    </bean>

    <!--
           All transformers must be defined here.  For this example we have two transformers
           used to transform the inbound events for the Greeter and Chatter components into
           objects they understand.  The entryPointResolver configured on the Model below will
           determine which method to call on our components based on the return types of these
           transformers.
       -->
    <bean id="StringToNameString" singleton="false" class="org.mule.samples.hello.StringToNameString">
        <property name="returnClass" value="org.mule.samples.hello.NameString"/>
    </bean>

    <bean id="NameStringToChatString" singleton="false" class="org.mule.samples.hello.NameStringToChatString">
        <property name="returnClass" value="org.mule.samples.hello.ChatString"/>
    </bean>

    <bean id="ChatStringToString" singleton="false" class="org.mule.samples.hello.ChatStringToString">
        <property name="returnClass" value="java.lang.String"/>
    </bean>

    <!--
        A Mule descriptor defines all the necessary information about how your components will
        interact with the framework, other components in the system and external sources.
        Please refer to the Configuration Guide for a full description of all the parameters.
    -->
    <bean id="GreeterUMO" class="org.mule.impl.MuleDescriptor">
        <property name="inboundRouter">
            <bean class="org.mule.routing.inbound.InboundRouterCollection" singleton="false">
                <property name="endpoints">
                    <list>
                        <bean class="org.mule.impl.endpoint.MuleEndpoint"
                              singleton="false">
                            <property name="endpointURI">
                                <bean class="org.mule.impl.endpoint.MuleEndpointURI">
                                    <constructor-arg index="0" type="java.lang.String" value="stream://System.in?transformers=StringToNameString"/>
                                </bean>
                            </property>

                        </bean>
                    </list>
                </property>
            </bean>
        </property>

        <property name="outboundRouter">
            <bean class="org.mule.routing.outbound.OutboundRouterCollection" singleton="false">
                <property name="matchAll" value="false"/>
                <property name="routers">
                    <list>
                        <bean class="org.mule.routing.outbound.OutboundPassThroughRouter" singleton="false">
                            <property name="endpoints">
                                <list>
                                    <bean class="org.mule.impl.endpoint.MuleEndpoint">
                                        <property name="endpointURI">
                                            <bean class="org.mule.impl.endpoint.MuleEndpointURI">
                                                <constructor-arg index="0" type="java.lang.String" value="vm://chitchatter"/>
                                            </bean>
                                        </property>
                                    </bean>
                                </list>
                            </property>
                        </bean>
                    </list>
                </property>
            </bean>
        </property>

        <property name="implementation" value="Greeter"/>
        <property name="modelName" value="main"/>

    </bean>

    <!--
    This is the actual bean used by the GreeterUMO. Notice that it is a singleton.  This
    important when component pooling is used (which it is by default).
    -->
    <bean id="Greeter" singleton="false" class="org.mule.samples.hello.Greeter"/>

    <bean id="ChitChatUMO" class="org.mule.impl.MuleDescriptor">
        <property name="inboundRouter">
            <bean class="org.mule.routing.inbound.InboundRouterCollection" singleton="false">
                <property name="endpoints">
                    <list>
                        <bean class="org.mule.impl.endpoint.MuleEndpoint"
                              singleton="false">
                            <property name="endpointURI">
                                <bean class="org.mule.impl.endpoint.MuleEndpointURI">
                                    <constructor-arg index="0" type="java.lang.String" value="vm://chitchatter?transformers=NameStringToChatString"/>
                                </bean>
                            </property>

                        </bean>
                    </list>
                </property>
            </bean>
        </property>

        <property name="outboundRouter">
            <bean class="org.mule.routing.outbound.OutboundRouterCollection" singleton="false">
                <property name="matchAll" value="false"/>
                <property name="routers">
                    <list>
                        <bean class="org.mule.routing.outbound.OutboundPassThroughRouter" singleton="false">
                            <property name="endpoints">
                                <list>
                                    <bean class="org.mule.impl.endpoint.MuleEndpoint">
                                        <property name="endpointURI">
                                            <bean class="org.mule.impl.endpoint.MuleEndpointURI">
                                                <constructor-arg index="0" type="java.lang.String" value="stream://System.out?transformers=ChatStringToString"/>
                                            </bean>
                                        </property>
                                    </bean>
                                </list>
                            </property>
                        </bean>
                    </list>
                </property>
            </bean>
        </property>

        <property name="implementation" value="ChitChatter"/>
        <property name="modelName" value="main"/>

    </bean>

    <!--
    This is the actual bean used by the ChitChatUMO. Notice that it is a singleton.  This
    important when component pooling is used (which it is by default).
    -->
    <bean id="ChitChatter" singleton="false" class="org.mule.samples.hello.ChitChatter"/>

    <bean name="main" class="org.mule.impl.model.seda.SedaModel"/>

</beans>

