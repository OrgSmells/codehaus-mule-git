<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mule-configuration PUBLIC "-//MuleSource //DTD mule-configuration XML V1.0//EN"
        "http://mule.mulesource.org/dtds/mule-configuration.dtd">
<mule-configuration id="persistent_vmqueue_test" version="1.0">

    <transaction-manager factory="org.mule.modules.jboss.transactions.JBossArjunaTransactionManagerFactory"/>

    <connector name="vmQueue" className="org.mule.providers.vm.VMConnector">
        <properties>
            <property name="queueEvents" value="true"/>
        </properties>
    </connector>

    <connector name="jmsConnectorXA" className="org.mule.providers.jms.activemq.ActiveMqJmsConnector">
        <properties>
            <property name="connectionFactoryClass" value="org.apache.activemq.ActiveMQXAConnectionFactory"/>
            <map name="connectionFactoryProperties">
                <property name="brokerURL" value="vm://localhost?broker.persistent=false&amp;broker.useJmx=false"/>
            </map>
            <property name="specification" value="1.1"/>
        </properties>
    </connector>


    <model name="TEST">

        <mule-descriptor name="Pre" implementation="org.mule.tck.functional.FunctionalTestComponent" singleton="true">
            <inbound-router>
                <endpoint address="vm://in">
                </endpoint>
            </inbound-router>
            <outbound-router>
                <router className="org.mule.routing.outbound.OutboundPassThroughRouter">
                    <endpoint address="jms://in" connector="jmsConnectorXA">
                        <transaction action="BEGIN_OR_JOIN"
                                     factory="org.mule.transaction.XaTransactionFactory"/>
                    </endpoint>
                    <transaction action="BEGIN_OR_JOIN"
                                 factory="org.mule.transaction.XaTransactionFactory"/>
                </router>
            </outbound-router>
        </mule-descriptor>

        <mule-descriptor name="Part1" implementation="org.mule.tck.functional.FunctionalTestComponent" singleton="true">
            <inbound-router>
                <endpoint address="jms://in" connector="jmsConnectorXA">
                    <transaction action="BEGIN_OR_JOIN"
                                 factory="org.mule.transaction.XaTransactionFactory"/>
                </endpoint>
            </inbound-router>
            <outbound-router>
                <router className="org.mule.routing.outbound.OutboundPassThroughRouter">
                    <endpoint address="jms://middle" connector="jmsConnectorXA"/>
                </router>
            </outbound-router>
        </mule-descriptor>

        <mule-descriptor name="Part2" implementation="org.mule.tck.functional.FunctionalTestComponent" singleton="true">
            <inbound-router>
                <endpoint address="jms://middle" connector="jmsConnectorXA">
                    <transaction action="BEGIN_OR_JOIN"
                                 factory="org.mule.transaction.XaTransactionFactory"/>
                </endpoint>
            </inbound-router>
            <outbound-router>
                <router className="org.mule.routing.outbound.OutboundPassThroughRouter">
                    <endpoint address="jms://q1" connector="jmsConnectorXA">
                        <transaction action="BEGIN_OR_JOIN"
                                     factory="org.mule.transaction.XaTransactionFactory"/>
                    </endpoint>
                </router>
            </outbound-router>
        </mule-descriptor>

        <mule-descriptor name="Part3" implementation="org.mule.tck.functional.FunctionalTestComponent" singleton="true">
            <inbound-router>
                <endpoint address="jms://q1" connector="jmsConnectorXA">
                    <transaction action="BEGIN_OR_JOIN"
                                 factory="org.mule.transaction.XaTransactionFactory"/>
                </endpoint>
            </inbound-router>
            <outbound-router>
                <router className="org.mule.routing.outbound.OutboundPassThroughRouter">
                    <endpoint address="jms://q2" connector="jmsConnectorXA"/>
                    <transaction action="BEGIN_OR_JOIN"
                                 factory="org.mule.transaction.XaTransactionFactory"/>
                </router>
            </outbound-router>
        </mule-descriptor>

        <mule-descriptor name="Part4" implementation="org.mule.tck.functional.FunctionalTestComponent" singleton="true">
            <inbound-router>
                <endpoint address="jms://q2" connector="jmsConnectorXA">
                    <transaction action="BEGIN_OR_JOIN"
                                 factory="org.mule.transaction.XaTransactionFactory"/>
                </endpoint>
            </inbound-router>
            <outbound-router>
                <router className="org.mule.routing.outbound.OutboundPassThroughRouter">
                    <endpoint address="jms://out" connector="jmsConnectorXA">
                        <transaction action="BEGIN_OR_JOIN"
                                     factory="org.mule.transaction.XaTransactionFactory"/>
                    </endpoint>
                    <transaction action="BEGIN_OR_JOIN"
                                 factory="org.mule.transaction.XaTransactionFactory"/>
                </router>
            </outbound-router>
        </mule-descriptor>

        <mule-descriptor name="Outbound" implementation="org.mule.tck.functional.FunctionalTestComponent" singleton="true">
            <inbound-router>
                <endpoint address="jms://out" connector="jmsConnectorXA">
                    <transaction action="BEGIN_OR_JOIN"
                                 factory="org.mule.transaction.XaTransactionFactory"/>
                </endpoint>
            </inbound-router>
            <outbound-router>
                <router className="org.mule.routing.outbound.OutboundPassThroughRouter">
                    <endpoint address="vm://out">
                    </endpoint>
                </router>
            </outbound-router>
            <properties>
                <property name="returnMessage" value="OUTPUT MESSAGE"/>
            </properties>
        </mule-descriptor>


    </model>
</mule-configuration>