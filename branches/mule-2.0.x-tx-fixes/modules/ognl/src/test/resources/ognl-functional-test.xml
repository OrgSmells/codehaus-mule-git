<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesource.org/schema/mule/core/2.0"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:vm="http://www.mulesource.org/schema/mule/vm/2.0"
      xmlns:ognl="http://www.mulesource.org/schema/mule/ognl/2.0"
      xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.mulesource.org/schema/mule/core/2.0 http://www.mulesource.org/schema/mule/core/2.0/mule.xsd
       http://www.mulesource.org/schema/mule/vm/2.0 http://www.mulesource.org/schema/mule/vm/2.0/mule-vm.xsd
       http://www.mulesource.org/schema/mule/ognl/2.0 http://www.mulesource.org/schema/mule/ognl/2.0/mule-ognl.xsd
">

    <vm:connector name="VMConnector" queueEvents="true"/>

    <model name="OGNL Functional TestCase">

        <service name="OGNLServiceWrapper1">
            <inbound>
                <inbound-endpoint address="vm://in" connector-ref="VMConnector"/>
            </inbound>
            <outbound>
                <filtering-router>
                    <outbound-endpoint address="vm://out" connector-ref="VMConnector"/>
                    <ognl:filter>
                        <ognl:expression><![CDATA[ equals("foo") || content.endsWith("bar") ]]></ognl:expression>
                    </ognl:filter>
                </filtering-router>
            </outbound>
        </service>
    </model>
</mule>