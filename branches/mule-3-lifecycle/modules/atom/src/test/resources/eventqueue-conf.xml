<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:s="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:a="http://abdera.apache.org"
      xmlns:atom="http://www.mulesoft.org/schema/mule/atom"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:quartz="http://www.mulesoft.org/schema/mule/quartz"
      xsi:schemaLocation="
               http://abdera.apache.org http://abdera.apache.org/schemas/abdera-spring.xsd
               http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
               http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.0/mule.xsd
               http://www.mulesoft.org/schema/mule/quartz http://www.mulesoft.org/schema/mule/quartz/3.0/mule-quartz.xsd
               http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/3.0/mule-http.xsd
               http://www.mulesoft.org/schema/mule/atom http://www.mulesoft.org/schema/mule/atom/3.0/mule-atom.xsd
               http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/3.0/mule-vm.xsd">

    <quartz:connector name="quartzConnectorDefaults"/>

    <http:connector name="HttpConnector"/>

    <http:polling-connector name="PollingHttpConnector" pollingFrequency="1000" discardEmptyContent="false"/>

    <quartz:endpoint name="quartz.in" jobName="eventTimer" repeatInterval="1000" repeatCount="0" startDelay="0">
        <quartz:event-generator-job/>
    </quartz:endpoint>
    <model name="testModel">

        <!--  service name="entryEventPublisher">
        <component class="org.mule.providers.atom.event.EntryEventPublisher"/>
        <inbound-router>
          <inbound-endpoint ref="quartz.in" remoteSync="true"/>
        </inbound-router>
        <outbound-router>
          <outbound-pass-through-router>
            <outbound-endpoint address="http://localhost:9002/events/feed">
              <properties>
                <entry key="Content-Type" value="application/atom+xml;type=entry"/>
              </properties>
            </outbound-endpoint>
          </outbound-pass-through-router>
        </outbound-router>
      </service  -->

        <!--
         This service publishes an AtomPub media entry. We hard code the Slug
         value which is used to create the entry title in the configuration for now.
         But, we could use property extractors to extract a Slug from our payload
         or we could set a Slug header on the message itself if we wnated.
        -->
        <service name="blobEventPublisher">
            <inbound>
                <inbound-endpoint ref="quartz.in" synchronous="true"/>
            </inbound>
            <component class="org.mule.module.atom.event.BlobEventPublisher"/>
            <outbound>
                <pass-through-router>
                    <outbound-endpoint address="http://localhost:9002/events" connector-ref="HttpConnector"
                                       synchronous="true">
                        <properties>
                            <s:entry key="Content-Type" value="text/plain"/>
                            <s:entry key="http.custom.headers">
                                <s:map>
                                    <s:entry key="Slug" value="Blob Event"/>
                                </s:map>
                            </s:entry>
                        </properties>
                    </outbound-endpoint>
                </pass-through-router>
            </outbound>
        </service>

        <service name="atomPubEventStore">
            <inbound>
                <inbound-endpoint address="http://localhost:9002" synchronous="true" connector-ref="HttpConnector"/>
            </inbound>
            <atom:component provider-ref="provider"/>
        </service>

        <service name="eventConsumer">
            <inbound>
                <inbound-endpoint address="http://localhost:9002/events" synchronous="true"
                                  connector-ref="PollingHttpConnector"/>
            </inbound>
            <component class="org.mule.module.atom.event.EventReceiver"/>
        </service>

    </model>

    <s:beans>
        <s:import resource="classpath:eventqueue-atom.xml"/>
    </s:beans>

</mule>