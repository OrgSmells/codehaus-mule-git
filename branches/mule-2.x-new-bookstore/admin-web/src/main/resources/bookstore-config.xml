<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesource.org/schema/mule/core/2.2"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:vm="http://www.mulesource.org/schema/mule/vm/2.2"
      xmlns:cxf="http://www.mulesource.org/schema/mule/cxf/2.2"
      xmlns:smtp="http://www.mulesource.org/schema/mule/smtp/2.2"
      xmlns:email="http://www.mulesource.org/schema/mule/email/2.2"
      xsi:schemaLocation="
               http://www.mulesource.org/schema/mule/core/2.2 http://www.mulesource.org/schema/mule/core/2.2/mule.xsd
               http://www.mulesource.org/schema/mule/vm/2.2 http://www.mulesource.org/schema/mule/vm/2.2/mule-vm.xsd
               http://www.mulesource.org/schema/mule/cxf/2.2 http://www.mulesource.org/schema/mule/cxf/2.2/mule-cxf.xsd
               http://www.mulesource.org/schema/mule/smtp/2.2 http://www.mulesource.org/schema/mule/smtp/2.2/mule-smtp.xsd
               http://www.mulesource.org/schema/mule/email/2.2 http://www.mulesource.org/schema/mule/email/2.2/mule-email.xsd">
    
    <!-- This configures an extra setting if you're using GMail's SMTP -->
    <smtp:gmail-connector name="emailConnector" />
 
    <vm:endpoint name="orderEmailService" path="emailservice" />
 
    <email:string-to-email-transformer name="StringToMimeMessage" />
    <custom-transformer name="OrderToEmail" class="org.mule.example.bookstore.transformers.OrderToEmailTransformer" />
 
    <custom-transformer name="HttpRequestToParameterMap" class="org.mule.transport.servlet.transformers.HttpRequestToParameterMap"/>
    <custom-transformer name="ParameterMapToBook" class="org.mule.example.bookstore.transformers.ParameterMapToBook"/>
    <custom-transformer name="AddBookResponse" class="org.mule.example.bookstore.transformers.AddBookResponse"/>

    <message-properties-transformer name="HtmlContentType">
        <add-message-property key="ContentType" value="text/html"/>
    </message-properties-transformer>

    <vm:connector name="vmConnector" queueEvents="true"/>
    
    <endpoint name="orders" address="vm://orders"/>

    <!-- This queue contains a feed of the latest statistics generated by the Data Warehouse -->
    <endpoint name="stats" address="vm://stats"/>

    <model name="Bookstore">

          <service name="CatalogService">
               <inbound>
                    <!-- Public interface -->
                    <inbound-endpoint address="cxf:http://localhost:8777/services/catalog" />

                    <!-- Administration interface -->
                    <inbound-endpoint transformer-refs="HttpRequestToParameterMap ParameterMapToBook" 
                                      address="servlet://catalog"
                                      responseTransformer-refs="AddBookResponse HtmlContentType"/>                                      
               </inbound>
               <component>
                    <singleton-object class="org.mule.example.bookstore.CatalogServiceImpl" />
               </component>
          </service> 

          <service name="OrderService">
               <inbound>
                    <!-- Public interface -->
                    <inbound-endpoint address="cxf:http://localhost:8777/services/order" />
               </inbound>
               <component>
                    <singleton-object class="org.mule.example.bookstore.OrderServiceImpl" />
               </component>
               <outbound>
                    <multicasting-router>
                        <vm:outbound-endpoint path="orderEmailService"/>
                        <vm:outbound-endpoint path="dataWarehouse"/>
                    </multicasting-router>
               </outbound>
          </service>
          
          <service name="EmailNotificationService">
               <inbound>
                    <vm:inbound-endpoint path="orderEmailService" />
               </inbound>
               <outbound>
                    <pass-through-router>
                         <smtp:outbound-endpoint user="username" password="password" host="smtp.gmail.com"
                              transformer-refs="OrderToEmail StringToMimeMessage" connector-ref="emailConnector"
                              from="bookstore@mulesource.com" subject="Your order has been placed!" />
                    </pass-through-router>
               </outbound>
          </service>
          
          <service name="DataWarehouse">
               <inbound>
                    <vm:inbound-endpoint path="dataWarehouse"/>
               </inbound>
               <component>
                    <singleton-object class="org.mule.example.bookstore.DataWarehouse" />
               </component>
               <outbound>
                    <pass-through-router>
                        <outbound-endpoint ref="stats" transformer-refs="HtmlContentType"/>
                    </pass-through-router>
               </outbound>
          </service>
     </model>
</mule>
