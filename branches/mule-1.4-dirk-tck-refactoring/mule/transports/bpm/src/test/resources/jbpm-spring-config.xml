<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mule-configuration PUBLIC "-//MuleSource //DTD mule-configuration XML V1.0//EN"
                                "http://mule.mulesource.org/dtds/mule-spring-configuration.dtd">

<mule-configuration id="jbpmTestConfig" version="1.0">
    <mule-environment-properties serverUrl=""/>

    <connector name="jBpmConnector" className="org.mule.providers.bpm.ProcessConnector">
        <properties>
            <!-- jBpm itself is configured by a series of Spring beans at the end of
                 this file. -->
            <spring-property name="bpms"><ref local="jbpm" /></spring-property>
        </properties>
    </connector>

    <model name="processModel">
        <mule-descriptor name="testService1" implementation="org.mule.components.simple.NullComponent">
            <inbound-router>
                <endpoint address="bpm://dummyProcess" />
            </inbound-router>
        </mule-descriptor>

        <mule-descriptor name="testService2" implementation="org.mule.components.simple.EchoComponent">
            <inbound-router>
                <endpoint address="bpm://sendMessageProcess" />
            </inbound-router>
        </mule-descriptor>
    </model>

    <!-- ***************************************************
         BPMS Configuration
         *************************************************** -->
    <!-- BPMS object for Mule's BPM Connector -->
    <bean id="jbpm" class="org.jbpm.msg.mule.Jbpm">
        <spring-property name="jbpmConfiguration">
            <ref local="jbpmConfig" />
        </spring-property>
    </bean>

    <!-- jBPM Configuration -->
    <bean id="jbpmConfig" class="org.springmodules.workflow.jbpm31.LocalJbpmConfigurationFactoryBeanWorkaround">
        <spring-property name="sessionFactory">
            <ref local="jbpmSessionFactory"/>
        </spring-property>
        <spring-property name="configuration">
            <value>jbpm.cfg.xml</value>
        </spring-property>
        <spring-property name="createSchema"><value>false</value></spring-property>
    </bean>

    <!-- JBPM Hibernate SessionFactory -->
    <bean id="jbpmSessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <spring-property name="dataSource">
            <ref local="jbpmDataSource" />
        </spring-property>
        <spring-property name="mappingLocations">
            <value>classpath*:/org/jbpm/**/*.hbm.xml</value>
        </spring-property>
        <spring-property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
                <prop key="hibernate.c3p0.min_size">1</prop>
                <prop key="hibernate.c3p0.max_size">3</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.query.substitutions">true 1, false 0</prop>
                <prop key="hibernate.jdbc.batch_size">0</prop>
                <!-- Create/update the database tables automatically when the JVM starts up -->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </spring-property>
    </bean>

    <!-- JBPM Datasource -->
    <bean id="jbpmDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <spring-property name="driverClassName"><value>org.hsqldb.jdbcDriver</value></spring-property>
        <spring-property name="url"><value>jdbc:hsqldb:mem:.;sql.enforce_strict_size=true</value></spring-property>
        <spring-property name="username"><value>sa</value></spring-property>
        <spring-property name="password"><value></value></spring-property>
    </bean>
</mule-configuration>
