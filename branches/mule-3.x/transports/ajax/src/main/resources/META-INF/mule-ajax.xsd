<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns="http://www.mulesource.org/schema/mule/ajax"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:mule="http://www.mulesource.org/schema/mule/core"
            xmlns:servlet="http://www.mulesource.org/schema/mule/servlet"
            xmlns:schemadoc="http://www.mulesource.org/schema/mule/schemadoc"
            targetNamespace="http://www.mulesource.org/schema/mule/ajax"
            elementFormDefault="qualified"
            attributeFormDefault="unqualified">

    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:import namespace="http://www.mulesource.org/schema/mule/core"
                schemaLocation="http://www.mulesource.org/schema/mule/core/3.0/mule.xsd"/>
    <xsd:import namespace="http://www.mulesource.org/schema/mule/servlet"
                schemaLocation="http://www.mulesource.org/schema/mule/servlet/3.0/mule-servlet.xsd"/>
    <xsd:import namespace = "http://www.mulesource.org/schema/mule/schemadoc"
                schemaLocation = "http://www.mulesource.org/schema/mule/schemadoc/3.0/mule-schemadoc.xsd"/>

    <xsd:annotation>
        <xsd:documentation>The AJAX transport provides support for listening to and dispatching AJAX events using Bayeux.
        </xsd:documentation>
        <xsd:appinfo>
            <schemadoc:short-name>AJAX</schemadoc:short-name>
            <schemadoc:page-title>Ajax Transport</schemadoc:page-title>
            <schemadoc:transport-features receiveEvents="true" dispatchEvents="false" responseEvents="true"
                                          requestEvents="false" transactions="false" streaming="true">
                <schemadoc:inboundMEPs in-only="true" in-optional-out="true" in-out="true"/>
                <schemadoc:outboundMEPs out-only="true"/>
            </schemadoc:transport-features>
        </xsd:appinfo>
    </xsd:annotation>

    <xsd:element name="servlet-connector" type="servlet:servletConnectorType" substitutionGroup="mule:abstract-connector"/>

    <xsd:element name="connector" type="ajaxConnectorType" substitutionGroup="mule:abstract-connector">
        <xsd:annotation>
            <xsd:documentation>
                Allows Mule to expose Mule Services over HTTP using a Jetty HTTP server and Cometd. A single Jetty server is created for each connector instance. One connector can serve many endpoints. Users should rarely need to have more than one Jetty connector. The Jetty connector can be configured using a Jetty XML config file, but the default configuration is sufficient for most scenarios.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="ajaxConnectorType">
        <xsd:complexContent>
            <xsd:extension base="mule:abstractConnectorType">
                <xsd:attribute name="logLevel" type="mule:substitutableInt">
                    <xsd:annotation>
                        <xsd:documentation>
                            0=none, 1=info, 2=debug
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                 <xsd:attribute name="timeout" type="mule:substitutableInt">
                    <xsd:annotation>
                        <xsd:documentation>
                            The server side poll timeout in milliseconds (default 250000). This is how long the server will hold a reconnect request before responding.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                 <xsd:attribute name="interval" type="mule:substitutableInt">
                    <xsd:annotation>
                        <xsd:documentation>
                            he client side poll timeout in milliseconds (default 0). How long a client will wait between reconnects
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                 <xsd:attribute name="maxInterval" type="mule:substitutableInt">
                    <xsd:annotation>
                        <xsd:documentation>
                            The max client side poll timeout in milliseconds (default 30000). A client will be removed if a connection is not received in this time.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                 <xsd:attribute name="jsonCommented" type="mule:substitutableBoolean">
                    <xsd:annotation>
                        <xsd:documentation>
                             If "true" (default) then the server will accept JSON wrapped in a comment and will generate JSON wrapped in a comment. This is a defence against Ajax Hijacking.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="multiFrameInterval" type="mule:substitutableInt">
                    <xsd:annotation>
                        <xsd:documentation>
                             The client side poll timeout if multiple connections are detected from the same browser (default 1500).
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="requestAvailable" type="mule:substitutableBoolean">
                    <xsd:annotation>
                        <xsd:documentation>
                             If true, the current request is made available via the {@link AbstractBayeux#getCurrentRequest()} method
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="directDeliver" type="mule:substitutableBoolean">
                    <xsd:annotation>
                        <xsd:documentation>
                            True if published messages are delivered directly to subscribers (default). If false, a message copy is created with only supported fields (default true).
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="refsThreshold" type="mule:substitutableInt">
                    <xsd:annotation>
                        <xsd:documentation>
                            The number of message refs at which the a single message response will be  cached instead of being generated for every client delivered to. Done to optimize a single message being sent to multiple clients.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>

                 <!--TODO SUPPORT FILTERS-->
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    
    <xsd:element name="inbound-endpoint" type="ajaxInboundEndpointType" substitutionGroup="mule:abstract-inbound-endpoint">
        <xsd:annotation>
            <xsd:documentation>
                Allows a Mule service to receive AJAX events over HTTP using a Jetty server.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="ajaxInboundEndpointType">
        <xsd:complexContent>
            <xsd:extension base="mule:inboundEndpointType"/>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="outbound-endpoint" type="ajaxOutboundEndpointType" substitutionGroup="mule:abstract-outbound-endpoint">
        <xsd:annotation>
            <xsd:documentation>
                Allows a Mule service to send AJAX evnets over HTTP using Bayeux.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="ajaxOutboundEndpointType">
        <xsd:complexContent>
            <xsd:extension base="mule:outboundEndpointType">
              <xsd:attributeGroup ref="outboundCometdAttributes"/>
            </xsd:extension>
        </xsd:complexContent>

    </xsd:complexType>

    <xsd:element name="endpoint" type="ajaxGlobalEndpointType" substitutionGroup="mule:abstract-global-endpoint">
        <xsd:annotation>
            <xsd:documentation>
                Allows users to configure a global AJAX endpoint.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="ajaxGlobalEndpointType">
        <xsd:complexContent>
            <xsd:extension base="mule:globalEndpointType"/>
        </xsd:complexContent>
    </xsd:complexType>


    <xsd:element name="servlet-inbound-endpoint" type="servletInboundEndpointType" substitutionGroup="mule:abstract-inbound-endpoint">
        <xsd:annotation>
            <xsd:documentation>
                Allows a Mule service to receive AJAX events sent via a servlet contianer
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="servletInboundEndpointType">
        <xsd:complexContent>
            <xsd:extension base="mule:inboundEndpointType">
                <xsd:attribute name="path" type="xsd:string" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            the servlett path to bind the service to.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="servlet-outbound-endpoint" type="servletOutboundEndpointType" substitutionGroup="mule:abstract-outbound-endpoint">
        <xsd:annotation>
            <xsd:documentation>
                Allows a Mule service to send AJAX events to a browser using cometd
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="servletOutboundEndpointType">
        <xsd:complexContent>
            <xsd:extension base="mule:outboundEndpointType">
                <xsd:attribute name="path" type="xsd:string" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            the servlett path to publish events to.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attributeGroup ref="outboundCometdAttributes"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="servlet-endpoint" type="servletGlobalEndpointType" substitutionGroup="mule:abstract-global-endpoint">
        <xsd:annotation>
            <xsd:documentation>
                Allows users to configure a global Servlet endpoint.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="servletGlobalEndpointType">
        <xsd:complexContent>
            <xsd:extension base="mule:globalEndpointType">
                <xsd:attribute name="path" type="xsd:string" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            the servlett path to bind the service to.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:attributeGroup name="outboundCometdAttributes">
        <xsd:attribute name="cacheMessages" type="xsd:boolean">
                <xsd:annotation>
                    <xsd:documentation>
                        If set to true the dispatcher will cache messages if there are no clients subscribed to this
                        channel.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="messageCacheSize" type="xsd:int">
                <xsd:annotation>
                    <xsd:documentation>
                        If cache messages is set to true, this value determines the size of the memory cache.  The cache
                        will automatically expire older items to make room for newer items.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
    </xsd:attributeGroup>

</xsd:schema>
