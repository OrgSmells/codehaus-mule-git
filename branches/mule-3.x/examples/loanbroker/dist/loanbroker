#! /bin/sh

if [ -z "$MULE_HOME" ] ; then
  echo "You must set the environment variable MULE_HOME to the location of your Mule install in order to run this example." 
  exit 1
fi

# If MULE_BASE is not set, make it MULE_HOME
if [ -z "$MULE_BASE" ] ; then
  MULE_BASE="$MULE_HOME"
  export MULE_BASE
fi

if [ ! -d "$MULE_BASE/apps/mule-example-loanbroker" ]
then
    echo "This example requires you to build it before running it.  Please follow the instructions in the README.txt file."
    exit 1
fi         

echo "The Loan Broker example is available in three flavors:"
echo "  1. Loan Broker ESB"
echo "  2. Loan Broker ESN"
echo "  3. Loan Broker BPM"
echo "Select the one you wish to execute and press Enter..."
read i

if [ 1 = $i ]
then
    # MULE_HOME_UNIX must be set. This is a workaround for windows but since the config relies
    # on it we need to implement it here, too
    exec "$MULE_BASE/bin/mule" -main org.mule.example.loanbroker.esb.LoanBrokerApp -M-Dmule.home.unix="$MULE_HOME"
elif [ 2 = $i ]
then
    exec "$MULE_BASE/bin/mule" -main org.mule.example.loanbroker.esn.LoanBrokerApp
elif [ 3 = $i ]
then
    exec "$MULE_BASE/bin/mule" -main org.mule.example.loanbroker.bpm.LoanBrokerApp
fi
