<!--
 Copyright (c) MuleSource, Inc.  All rights reserved.  http://www.mulesource.com

 The software in this package is published under the terms of the MuleSource MPL
 license, a copy of which has been included with this distribution in the
 LICENSE.txt file.
-->
<project name="Mule Examples: Loan Broker ESB" default="setup">

    <property name="esb.name" value="mule-example-loanbroker-esb"/>
    <property name="ejb.name" value="mule-example-loanbroker-esb-credit-agency"/>
    <property environment="env"/>

    <!-- Loan Broker ESB -->
    <property name="dir.esb.java" value="loanbroker/src"/>
    <property name="dir.esb.conf" value="loanbroker/conf"/>
    <property name="dir.esb.resources" value="loanbroker/resources"/>
    <property name="dir.esb.build" value="loanbroker/build"/>
    <property name="dir.esb.classes" value="loanbroker/build/classes"/>

    <!-- Credit Agency EJB -->
    <property name="dir.ejb.java" value="credit-agency/src"/>
    <property name="dir.ejb.conf" value="credit-agency/conf"/>
    <property name="dir.ejb.resources" value="credit-agency/resources"/>
    <property name="dir.ejb.build" value="credit-agency/build"/>
    <property name="dir.ejb.classes" value="credit-agency/build/classes"/>

    <property name="url.maven.repo" value="http://www.ibiblio.org/maven2"/>

    <target name="clean"
            description="Clean the output directory (start from scratch).">
        <delete dir="${dir.esb.build}"/>
        <delete dir="${dir.ejb.build}"/>
    </target>

    <!-- Download any additional libraries needed to run the application -->
    <target name="get.libraries">
            
        <get src="${url.maven.repo}/activemq/activemq/3.2.4/activemq-3.2.4.jar"
             dest="${dir.user.lib}/activemq.jar"
             verbose="true"
             usetimestamp="true"/>
        <!-- Used by ActiveMQ -->
        <get src="${url.maven.repo}/concurrent/concurrent/1.3.4/concurrent-1.3.4.jar"
             dest="${dir.user.lib}/concurrent.jar"
             verbose="true"
             usetimestamp="true"/>
        <get src="${url.maven.repo}/openejb/openejb-core/1.0/openejb-core-1.0.jar"
             dest="${dir.user.lib}/openejb.jar"
             verbose="true"
             usetimestamp="true"/>
        <!-- Used by OpenEJB -->
        <get src="${url.maven.repo}/castor/castor/0.9.9/castor-0.9.9.jar"
             dest="${dir.user.lib}/castor.jar"
             verbose="true"
             usetimestamp="true"/>
    </target>

    <target name="init" depends="get.libraries">
            
        <!-- Create the build directory if it doesn't exist -->
        <mkdir dir="${dir.esb.classes}"/>
        <mkdir dir="${dir.ejb.classes}"/>

        <!-- Configure Mule classpath (mirrors wrapper.conf settings -->
        <path id="classpath.mule">
            <pathelement location="${dir.mule.home}/conf"/>
            <fileset dir="${dir.mule.home}/lib/user">
                <include name="**/*.jar"/>
            </fileset>
            <fileset dir="${dir.mule.home}/lib/mule">
                <include name="**/*.jar"/>
            </fileset>
            <fileset dir="${dir.mule.home}/lib/opt">
                <include name="**/*.jar"/>
            </fileset>
            <fileset dir="${dir.mule.home}/lib">
                <include name="**/*.jar"/>
            </fileset>
        </path>
    </target>

    <target name="compile-esb"
            depends="init"
            description="Compile the LoanBroker-ESB.">
            
        <javac srcdir="${dir.esb.java}"
               destdir="${dir.esb.classes}"
               debug="true"
               source="1.4"
               target="1.4">
            <classpath refid="classpath.mule"/>
        </javac>
        
        <!-- Copy all resources to the output folder as well -->
        <copy todir="${dir.esb.classes}">
            <fileset dir="${dir.esb.conf}"/>
            <fileset dir="${dir.esb.resources}"/>
        </copy>
    </target>

    <target name="compile-ejb"
            depends="init"
            description="Compile the Credit Agency EJB.">
            
        <javac srcdir="${dir.ejb.java}"
               destdir="${dir.ejb.classes}"
               debug="true"
               source="1.4"
               target="1.4">
            <classpath refid="classpath.mule"/>
        </javac>
        
        <!-- Copy all resources to the output folder as well -->
        <copy todir="${dir.ejb.classes}">
            <fileset dir="${dir.ejb.resources}"/>
        </copy>
    </target>

    <target name="compile"
            depends="compile-esb,compile-ejb"
            description="Compile the application."/>

   <target name="package" 
           depends="compile" 
           description="Package the application">
           
        <jar jarfile="${dir.esb.build}/${esb.name}.jar" 
             basedir="${dir.esb.classes}"/>
        <jar jarfile="${dir.ejb.build}/${ejb.name}.jar" 
             basedir="${dir.ejb.classes}"/>
   </target>

   <target name="deploy" 
           depends="package" 
           description="Deploy the application to the Mule server">
           
        <copy file="${dir.esb.build}/${esb.name}.jar" 
              todir="${dir.user.lib}" 
              overwrite="true"
              verbose="true"/>
        <copy file="${dir.ejb.build}/${ejb.name}.jar" 
              todir="${dir.user.lib}" 
              overwrite="true"
              verbose="true"/>
   </target>

   <target name="setup">
      <fail message="MULE_HOME environment variable has not been set.">
       <condition>
        <or>
         <equals arg1="${env.MULE_HOME}" arg2=""/>
          <!-- Using a trick here. If there was no MULE_HOME environment 
               variable set, ant will set the value to the unprocessed 
               template string -->
          <equals arg1="${env.MULE_HOME}" arg2="$${env.MULE_HOME}"/>
         </or>
        </condition>
      </fail>

      <antcall target="ifMuleBase"/>
      <antcall target="ifMuleHome"/>
   </target>

   <target name="ifMuleBase" if="env.MULE_BASE">
      <property name="dir.mule.home" value="${env.MULE_BASE}"/>
      <property name="dir.user.lib" value="${dir.mule.home}/lib/user/"/>
      <antcall target="deploy"/>
   </target>

   <target name="ifMuleHome" if="env.MULE_HOME" unless="env.MULE_BASE">
      <property name="dir.mule.home" value="${env.MULE_HOME}"/>
      <property name="dir.user.lib" value="${dir.mule.home}/lib/user/"/>
      <antcall target="deploy"/>
   </target>

</project>
