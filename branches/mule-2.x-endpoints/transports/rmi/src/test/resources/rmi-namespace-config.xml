<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesource.org/schema/mule/core/2.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:spring="http://www.springframework.org/schema/beans"
       xmlns:rmi="http://www.mulesource.org/schema/mule/rmi/2.0"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.mulesource.org/schema/mule/core/2.0 http://www.mulesource.org/schema/mule/core/2.0/mule.xsd
       http://www.mulesource.org/schema/mule/rmi/2.0 http://www.mulesource.org/schema/mule/rmi/2.0/mule-rmi.xsd">

    <spring:bean name="securityManager"
          class="org.mule.providers.rmi.DummySecurityManager"/>

    <spring:bean name="jndiContext"
          class="org.mule.tck.jndi.InMemoryContext"/>

    <rmi:connector name="rmiConnector"
                   pollingFrequency="1234"
                   securityManager-ref="securityManager"
                   securityPolicy="rmi.policy"
                   serverClassName="bcd"
                   serverCodebase="cde"
                   jndiInitialFactory="org.mule.tck.jndi.InMemoryContextFactory"
                   jndiProviderUrl="efg"
                   jndiUrlPkgPrefixes="fgh">

        <!-- obviously here we are nt restricted to string pairs, so it could be done a little better -->
        <jndi-provider-properties>
            <spring:entry key="ghi" value="hij"/>
        </jndi-provider-properties>
    </rmi:connector>

    <rmi:connector name="rmiConnector2"
                   pollingFrequency="1234"
                   securityManager-ref="securityManager"
                   securityPolicy="rmi.policy"
                   serverClassName="bcd"
                   serverCodebase="cde"
                   jndiContext-ref="jndiContext"/>

</mule>