<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns="http://www.mulesource.org/schema/mule/jdbc/2.0"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:mule="http://www.mulesource.org/schema/mule/core/2.0"
        xmlns:schemadoc="http://www.mulesource.org/schema/mule/schemadoc/2.0"
	targetNamespace="http://www.mulesource.org/schema/mule/jdbc/2.0"
	elementFormDefault="qualified" attributeFormDefault="unqualified">
	
	<xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
	<xsd:import namespace="http://www.mulesource.org/schema/mule/core/2.0"
		schemaLocation="http://www.mulesource.org/schema/mule/core/2.0/mule.xsd"/>
	
	<xsd:annotation>
            <xsd:documentation>The JDBC transport allows data to be retrieved from and written to and database that
	supports a JDBC driver. It also supports invoking stored precedures.  
            </xsd:documentation>
            <xsd:appinfo>
                <schemadoc:page-title>JDBC Transport</schemadoc:page-title>
                <schemadoc:transport-features receiveEvents="true" dispatchEvents="true" responseEvents="false"
	requestEvents="true"
	transactions="true" streaming="false">
                    <schemadoc:inboundMEPs in-only="true"/>
                    <schemadoc:outboundMEPs out-only="true"/>
                </schemadoc:transport-features>
            </xsd:appinfo>
	</xsd:annotation>

	<xsd:element name="connector" type="jdbcConnectorType"
		substitutionGroup="mule:abstract-connector"/>
	
	<xsd:complexType name="jdbcConnectorType">
		<xsd:annotation>
			<xsd:documentation>The JDBC connector is used to configure the shared
				behavior for JDBC endpoints that reference the connector. DataSources,
				Queries, and Polling Intervals are some of the key properties configured on
				the JDBC connector. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="mule:connectorType">
				<xsd:group ref="queryElements">
					<xsd:annotation>
						<xsd:documentation> Defines a set of queries. Each query has a key
							and a value (sql statement). Queries are later referenced by
							key. </xsd:documentation>
					</xsd:annotation>
				</xsd:group>
				<xsd:attribute name="pollingFrequency"
					type="mule:substitutableLong">
					<xsd:annotation>
						<xsd:documentation> The delay in milliseconds that will be used
							during two subsequent polls to the database. This is only
							applied to queries configured on Inbound Endpoints.
							</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="dataSource-ref" type="xsd:NMTOKEN"
					use="required">
					<xsd:annotation>
						<xsd:documentation> Reference to the JDBC DataSource object.
							This object is typically created using Spring. When using XA
							transactions, an XADataSource object must be provided.
							</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="queryRunner-ref" type="xsd:NMTOKEN">
					<xsd:annotation>
						<xsd:documentation> Reference to the QueryRunner object, which
							is the object that actually runs the Query. This object is
							typically created using Spring. Default is
							{{org.apache.commons.dbutils.QueryRunner.
							</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="resultSetHandler-ref" type="xsd:NMTOKEN">
					<xsd:annotation>
						<xsd:documentation> Reference to the ResultSetHandler object,
							which is the object that determines with the
							java.sql.ResultSet gets handled. This object is typically
							created using Spring. Default is
							org.apache.commons.dbutils.handlers.MapListHandler,
							which steps through the ResultSet and stores records as Map
							objects on a List. </xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:element name="inbound-endpoint" type="inboundEndpointType"
		substitutionGroup="mule:abstract-inbound-endpoint">
		<xsd:annotation>
			<xsd:documentation> Receives or fetches data from a database. You can reference SQL select statements or call stored procedures on Inbound Endpoints. Statements on the Inbound Endpoint get
				invoked periodically according to the pollingInterval. Statements that contain an insert, update, or delete are not allowed.
				</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="inboundEndpointType">
		<xsd:complexContent>
			<xsd:extension base="mule:inboundEndpointType">
				<xsd:group ref="queryElements"/>
				<xsd:attributeGroup ref="addressAttributes"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:element name="outbound-endpoint" type="outboundEndpointType"
		substitutionGroup="mule:abstract-outbound-endpoint">
		<xsd:annotation>
			<xsd:documentation> You can reference any SQL statement or call a stored procedure on Outbound Endpoints. Statements on the Outbound Endpoint get invoked synchronously.  SQL select statements or stored procedures may return output which is handled by the ResultSetHandler then attached to the message as the payload.
				</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="outboundEndpointType">
		<xsd:complexContent>
			<xsd:extension base="mule:outboundEndpointType">
				<xsd:group ref="queryElements"/>
				<xsd:attributeGroup ref="addressAttributes"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:element name="endpoint" type="globalEndpointType"
		substitutionGroup="mule:abstract-global-endpoint"/>
	<xsd:complexType name="globalEndpointType">
		<xsd:complexContent>
			<xsd:extension base="mule:globalEndpointType">
				<xsd:group ref="queryElements"/>
				<xsd:attributeGroup ref="addressAttributes"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:attributeGroup name="addressAttributes">
		<xsd:attribute name="queryKey" type="xsd:string"/>
		<xsd:attribute name="pollingFrequency" type="mule:substitutableLong"/>
	</xsd:attributeGroup>
	
	<xsd:element name="transaction" type="mule:baseTransactionType"
		substitutionGroup="mule:abstract-transaction">
		<xsd:annotation>
			<xsd:documentation>Standard Mule transaction configuration. See the following for usage: http://mule.mulesource.org/display/MULE2USER/Transaction+Management 
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	
	<xsd:group name="queryElements">
		<xsd:sequence>
			<xsd:element name="query" type="mule:keyValueType" minOccurs="0"
				maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation> Assigns a name (key) to a query (value). Queries
						are then referenced by key, for example jdbc://myQuery for
						<![CDATA[<jdbc:query key="myQuery" value="select * from table"/>]]>
						</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:group>
	
	
</xsd:schema>

