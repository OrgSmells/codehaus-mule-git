<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://www.mulesource.org/schema/mule/axis/2.0"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
    xmlns:mule="http://www.mulesource.org/schema/mule/core/2.0"
    targetNamespace="http://www.mulesource.org/schema/mule/axis/2.0" 
    elementFormDefault="qualified"
    attributeFormDefault="unqualified">

    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:import namespace="http://www.mulesource.org/schema/mule/core/2.0" 
                schemaLocation="http://www.mulesource.org/schema/mule/core/2.0/mule.xsd" />

    <xsd:element name="connector" type="axisConnectorType" substitutionGroup="mule:abstract-connector">
        <xsd:annotation>
            <xsd:documentation>
                Consume and provide web services via axis.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="axisConnectorType">
        <xsd:complexContent>        
            <xsd:extension base="mule:connectorType">
                <xsd:sequence>
                    <xsd:element name="bean-type" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                    <xsd:element name="supported-scheme" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                </xsd:sequence>
                <xsd:attribute name="axis-ref" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            Bean reference to the axis server that should be used.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="clientConfig" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            Configuration file to use when building the axis client.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="clientProvider-ref" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            Bean reference to the client provider that should be used to
                            create the axis client.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="doAutoTypes" type="mule:substitutableBoolean">
                    <xsd:annotation>
                        <xsd:documentation>
                            Use this property to configure whether AxisServer should automatically map types.
                            This property has only effect if you don't provide your own axisServer via the
                            'axisServer-ref' property.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="serverConfig" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            Configuration file to use when building the axis server.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="serverProvider-ref" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            Bean reference to the server provider that should be used to create the
                            AxisServer.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="treatMapAsNamedParams" type="mule:substitutableBoolean">
                    <xsd:annotation>
                        <xsd:documentation>
                            The AxisConnector treats a Map as container for named parameters, which 
                            eventually will be unpacked. This will result into a problem if your exposed 
                            service needs to take a Map as a parameter, because the actual Map will never 
                            reach the service intact. In this case set this property to false.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="inbound-endpoint" type="inboundEndpointType" substitutionGroup="mule:abstract-inbound-endpoint"/>
    <xsd:complexType name="inboundEndpointType">
        <xsd:complexContent>
            <xsd:extension base="mule:inboundEndpointType">
                <xsd:group ref="propertyElements"/>
                <xsd:attributeGroup ref="propertyAttributes"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="outbound-endpoint" type="outboundEndpointType" substitutionGroup="mule:abstract-outbound-endpoint"/>
    <xsd:complexType name="outboundEndpointType">
        <xsd:complexContent>
            <xsd:extension base="mule:outboundEndpointType">
                <xsd:group ref="propertyElements"/>
                <xsd:attributeGroup ref="propertyAttributes"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="endpoint" type="globalEndpointType" substitutionGroup="mule:abstract-global-endpoint"/>
    <xsd:complexType name="globalEndpointType">
        <xsd:complexContent>
            <xsd:extension base="mule:globalEndpointType">
                <xsd:group ref="propertyElements"/>
                <xsd:attributeGroup ref="propertyAttributes"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:attributeGroup name="propertyAttributes">
        <xsd:attribute name="clientConfig" type="xsd:string"/>
    </xsd:attributeGroup>

    <xsd:group name="propertyElements">
        <xsd:sequence>
            <xsd:element name="soap-action" type="mule:valueType" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="soap-method" minOccurs="0" maxOccurs="unbounded">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="soap-parameter" minOccurs="0" maxOccurs="unbounded">
                            <xsd:complexType>
                                <xsd:attribute name="parameter" type="xsd:string" use="required"/>
                                <xsd:attribute name="type" type="xsd:string" use="required"/>
                                <xsd:attribute name="mode" type="xsd:string" use="required"/>
                            </xsd:complexType>
                        </xsd:element>
                        <xsd:element name="soap-return" minOccurs="0">
                            <xsd:complexType>
                                <xsd:attribute name="type" type="xsd:string" use="required"/>
                            </xsd:complexType>
                        </xsd:element>
                    </xsd:sequence>
                    <xsd:attribute name="method" type="xsd:string" use="required"/>
                </xsd:complexType>
            </xsd:element>
        </xsd:sequence>
    </xsd:group>

</xsd:schema>
