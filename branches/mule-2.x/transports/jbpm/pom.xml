<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.mule.transports</groupId>
        <artifactId>mule-transports</artifactId>
        <version>2.1.0-M1-SNAPSHOT</version>
    </parent>
    <artifactId>mule-transport-jbpm</artifactId>
    <packaging>jar</packaging>
    <name>BPM Transport: JBoss jBPM</name>
    <description>Classes which allow Mule to integrate with JBoss jBPM via the BPM Connector.</description>

    <dependencies>
        <!-- Generic BPM Transport -->
        <dependency>
            <groupId>org.mule.transports</groupId>
            <artifactId>mule-transport-bpm</artifactId>
            <version>${version}</version>
        </dependency>

        <!-- jBPM --> 
        <dependency>
            <groupId>org.jbpm</groupId>
            <artifactId>jbpm</artifactId>
            <version>3.1.4</version>
        </dependency>
        <!-- Only needed for scripting in jPDL -->
        <dependency>
            <groupId>bsh</groupId>
            <artifactId>bsh</artifactId>
            <version>1.3.0</version>
            <optional>true</optional>
        </dependency>

        <!-- Only needed for Spring-based configuration -->
        <dependency>
            <groupId>org.mule.modules</groupId>
            <artifactId>mule-module-spring-extras</artifactId>
            <version>${version}</version>
            <!-- TODO Change this back to scope=test once 
                LocalJbpmConfigurationFactoryBeanWorkaround 
                is no longer needed in src/main/java -->
            <!-- <scope>test</scope> -->
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
        </dependency>
        <!-- This is the same as spring-modules-jbpm31 but we override the pom in our local 
            dependencies repo because the one from Spring includes the kitchen sink. -->
        <dependency>
            <groupId>org.springmodules</groupId>
            <artifactId>spring-modules-jbpm31-nodeps</artifactId>
            <version>0.8a</version>
        </dependency>

        <!-- Hibernate --> 
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate</artifactId>
        </dependency>
        <!-- Use the combined cglib-nodep instead of separate cglib and asm dependencies -->
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib-nodep</artifactId>
            <version>2.1_3</version>
        </dependency>
        <!-- Used to pool connections in Hibernate -->
        <dependency>
            <groupId>c3p0</groupId>
            <artifactId>c3p0</artifactId>
            <version>0.9.0.4</version>
        </dependency>

        <!-- Needed for org.mule.transport.bpm.jbpm.actions.SendMuleEvent -->
        <dependency>
            <groupId>commons-jxpath</groupId>
            <artifactId>commons-jxpath</artifactId>
        </dependency>
        
        <!-- Simple Java DB for persistence -->
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.transports</groupId>
            <artifactId>mule-transport-bpm</artifactId>
            <version>${version}</version>
            <scope>test</scope>
            <type>test-jar</type>
        </dependency>
        <dependency>
            <groupId>org.mule.transports</groupId>
            <artifactId>mule-transport-jdbc</artifactId>
            <version>${version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.transports</groupId>
            <artifactId>mule-transport-vm</artifactId>
            <version>${version}</version>
            <scope>test</scope>
        </dependency>

        <!--
            Bind log4j statically, but preserve
            the clogging API compatibility.
         -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl104-over-slf4j</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
