<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:mule="http://www.mulesource.org/schema/mule/core/2.0"
    xmlns:vm="http://www.mulesource.org/schema/mule/vm/2.0"
    xmlns:ejb="http://www.mulesource.org/schema/mule/ejb/2.0"
    xmlns:jms="http://www.mulesource.org/schema/mule/jms/2.0"
    xsi:schemaLocation="
               http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
               http://www.mulesource.org/schema/mule/core/2.0 http://www.mulesource.org/schema/mule/core/2.0/mule.xsd
               http://www.mulesource.org/schema/mule/vm/2.0 http://www.mulesource.org/schema/mule/vm/2.0/mule-vm.xsd
               http://www.mulesource.org/schema/mule/ejb/2.0 http://www.mulesource.org/schema/mule/ejb/2.0/mule-ejb.xsd
               http://www.mulesource.org/schema/mule/jms/2.0 http://www.mulesource.org/schema/mule/jms/2.0/mule-jms.xsd">

    <description>
        The Loan Broker ESB example implements the Loan Broker Example using an ESB topology. See
        http://mule.mulesource.org/wiki/display/MULE/LoanBroker+ESB for details.
    </description>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:openejb.properties</value>
            </list>
        </property>
    </bean>

    <mule:mule>

        <ejb:connector name="ejbConnector" securityPolicy="security.policy"
            jndiInitialFactory="org.openejb.client.LocalInitialContextFactory">
            <mule:jndi-provider-properties>
                <entry key="openejb.base" value="${openejb.base}" />
                <entry key="openejb.configuration" value="${openejb.configuration}" />
                <entry key="logging.conf" value="${logging.conf}" />
                <entry key="openejb.nobanner" value="${openejb.nobanner}" />
            </mule:jndi-provider-properties>
        </ejb:connector>

        <jms:activemq-connector name="jmsConnector" />

        <mule:custom-transformer name="RestRequestToCustomerRequest"
                                 class="org.mule.examples.loanbroker.transformers.RestRequestToCustomerRequest" />
        <mule:custom-transformer name="LoanQuoteRequestToCreditProfileArgs"
                                 class="org.mule.examples.loanbroker.transformers.LoanQuoteRequestToCreditProfileArgs" />
        <mule:custom-transformer name="CreditProfileXmlToCreditProfile"
                                 class="org.mule.examples.loanbroker.transformers.CreditProfileXmlToCreditProfile" />
        <mule:custom-transformer name="SetLendersAsRecipients"
                                 class="org.mule.examples.loanbroker.transformers.SetLendersAsRecipients" />
        <mule:custom-transformer name="ObjectToJMSMessage"
                                 class="org.mule.providers.jms.transformers.ObjectToJMSMessage" />

        <mule:endpoint name="CustomerRequestsREST" address="jetty:rest://localhost:8888/loanbroker" />
        <mule:endpoint name="CustomerRequests" address="vm://customer.requests" />
        <mule:endpoint name="CustomerResponses" address="LoanQuotes" />
        <mule:endpoint name="LoanQuotes" address="jms://esb.loan.quotes" />
        <mule:endpoint name="CreditAgencyGateway" address="jms://esb.credit.agency" />
        <!-- here we're telling Mule to invoke a remote Ejb directly (not host a
        proxy service for the remote object as with the other example in mule-config-with-ejb-container.xml example)
        -->
        <mule:endpoint name="CreditAgency"
                       address="ejb://localhost:1099/local/CreditAgency?method=getCreditProfile" />
        <mule:endpoint name="LenderGateway" address="jms://esb.lender.service" />
        <mule:endpoint name="LenderService" address="vm://lender.service" />
        <mule:endpoint name="BankingGateway" address="jms://esb.banks" />
        <mule:endpoint name="Bank1" address="axis:http://localhost:10080/mule/TheBank1?method=getLoanQuote"
                       synchronous="true" />
        <mule:endpoint name="Bank2" address="axis:http://localhost:20080/mule/TheBank2?method=getLoanQuote"
                       synchronous="true" />
        <mule:endpoint name="Bank3" address="axis:http://localhost:30080/mule/TheBank3?method=getLoanQuote"
                       synchronous="true" />
        <mule:endpoint name="Bank4" address="axis:http://localhost:40080/mule/TheBank4?method=getLoanQuote"
                       synchronous="true" />
        <mule:endpoint name="Bank5" address="axis:http://localhost:50080/mule/TheBank5?method=getLoanQuote"
                       synchronous="true" />
        <mule:endpoint name="Bank1In" address="axis:http://localhost:10080/mule" />
        <mule:endpoint name="Bank2In" address="axis:http://localhost:20080/mule" />
        <mule:endpoint name="Bank3In" address="axis:http://localhost:30080/mule" />
        <mule:endpoint name="Bank4In" address="axis:http://localhost:40080/mule" />
        <mule:endpoint name="Bank5In" address="axis:http://localhost:50080/mule" />

        <mule:model name="loan-broker">

            <!--
            The loan broker is used to receive loan requests
            -->
            <mule:service name="LoanBroker">
                <mule:component class="org.mule.examples.loanbroker.AsynchronousLoanBroker" />

                <mule:inbound-router>
                    <inbound-endpoint ref="CustomerRequestsREST" transformer-ref="RestRequestToCustomerRequest" />
                    <inbound-endpoint ref="CustomerRequests" />
                </mule:inbound-router>

                <mule:outbound-router>
                    <mule:outbound-pass-through-router>
                        <mule:outbound-endpoint ref="CreditAgencyGateway" />
                    </mule:outbound-pass-through-router>
                </mule:outbound-router>

                <mule:response-router timeout="1000000">
                    <mule:response-endpoint ref="LoanQuotes" />
                    <mule:custom-response-router class="org.mule.examples.loanbroker.routers.BankQuotesResponseAggregator" />
                </mule:response-router>
            </mule:service>

            <!--
            The credit agency service will get the credit profile for a customer
            -->
            <mule:service name="CreditAgencyGatewayService">
                <mule:component class="org.mule.components.builder.ReflectionMessageBuilder" />
                <mule:inbound-router>
                    <inbound-endpoint ref="CreditAgencyGateway" />
                </mule:inbound-router>
                <mule:outbound-router>
                    <mule:filtering-router>
                        <!-- We invoke the credit Agency service using remoteSync which means that a response
                        will be returned from the service. there is also a responseTransformer that will
                        conver the Xml returned from the CreditAgency Ejb into a CreditProfile object -->
                        <mule:outbound-endpoint remoteSync="true" transformer-ref="LoanQuoteRequestToCreditProfileArgs"
                                       responseTransformer-ref="CreditProfileXmlToCreditProfile" ref="CreditAgency" />
                        <mule:outbound-endpoint ref="LenderGateway" />
                    </mule:filtering-router>
                </mule:outbound-router>
            </mule:service>

            <mule:service name="LenderGatewayService">
                <mule:inbound-router>
                    <inbound-endpoint ref="LenderGateway" />
                    <mule:forwarding-router/>
                </mule:inbound-router>
                <mule:outbound-router>
                    <mule:chaining-router>
                        <mule:outbound-endpoint remoteSync="true" ref="LenderService" />
                        <mule:outbound-endpoint ref="BankingGateway"
                                       transformer-ref="SetLendersAsRecipients ObjectToJMSMessage" />
                    </mule:chaining-router>
                </mule:outbound-router>
            </mule:service>

            <mule:service name="LenderServiceService">
                <mule:component class="org.mule.examples.loanbroker.lender.DefaultLender" />
                <mule:inbound-router>
                    <inbound-endpoint ref="LenderService" />
                </mule:inbound-router>
            </mule:service>

            <mule:service name="BankingGatewayService">
                <mule:inbound-router>
                    <inbound-endpoint ref="BankingGateway" />
                    <mule:forwarding-router/>
                </mule:inbound-router>
                <mule:outbound-router>
                    <mule:static-recipient-list-router>
                        <mule:reply-to address="LoanQuotes" />
                        <mule:message-property-filter pattern="recipients!=null" />
                    </mule:static-recipient-list-router>
                </mule:outbound-router>
            </mule:service>

            <!--
            These are mock bank services that represent remote bank loan services
            One or more of these are selected by the LenderService and a request
            is routed to them.   The lenderService outbound router also defines a
            replyTo property which will be used by Mule to route the responses back
            to the LoanBrokerQuotes destination
            -->
            <mule:service name="TheBank1">
                <mule:component class="org.mule.examples.loanbroker.bank.Bank" />
                <mule:inbound-router>
                    <inbound-endpoint ref="Bank1In" />
                </mule:inbound-router>
            </mule:service>

            <mule:service name="TheBank2">
                <mule:component class="org.mule.examples.loanbroker.bank.Bank" />
                <mule:inbound-router>
                    <inbound-endpoint ref="Bank2In" />
                </mule:inbound-router>
            </mule:service>

            <mule:service name="TheBank3">
                <mule:component class="org.mule.examples.loanbroker.bank.Bank" />
                <mule:inbound-router>
                    <inbound-endpoint ref="Bank3In" />
                </mule:inbound-router>
            </mule:service>

            <mule:service name="TheBank4">
                <mule:component class="org.mule.examples.loanbroker.bank.Bank" />
                <mule:inbound-router>
                    <inbound-endpoint ref="Bank4In" />
                </mule:inbound-router>
            </mule:service>

            <mule:service name="TheBank5">
                <mule:component class="org.mule.examples.loanbroker.bank.Bank" />
                <mule:inbound-router>
                    <inbound-endpoint ref="Bank5In" />
                </mule:inbound-router>
            </mule:service>

        </mule:model>

    </mule:mule>

</beans>
