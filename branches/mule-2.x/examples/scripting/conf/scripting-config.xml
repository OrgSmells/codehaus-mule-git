<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesource.org/schema/mule/core/2.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:spring="http://www.springframework.org/schema/beans"
       xmlns:scripting="http://www.mulesource.org/schema/mule/scripting/2.0"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.mulesource.org/schema/mule/core/2.0 http://www.mulesource.org/schema/mule/core/2.0/mule.xsd
       http://www.mulesource.org/schema/mule/scripting/2.0 http://www.mulesource.org/schema/mule/scripting/2.0/mule-scripting.xsd">

    <description>
        This example demonstrates invoking a Groovy script as the service component.
    </description>
    
    <scripting:script name="scriptText">
        def msg = eventContext.transformedMessageAsString
        log.boilerPlate("Message Received: ${msg} - class: ${msg.class.name}")
        return ["Hello", ":-)"];
    </scripting:script>
    
    <model name="main">
        <service name="ScriptService">
            <component class="org.mule.components.script.jsr223.ScriptComponent">
                <properties>
                    <spring:entry key="scriptEngineName" value="groovy"/>
                    <spring:entry key="scriptText" value-ref="scriptText"/>
                </properties>
            </component>
            <inbound-router>
                <inbound-endpoint address="stdio://System.in">
                    <properties>
                        <spring:entry key="promptMessage" value="Please enter a message: "/>
                        <spring:entry key="messageDelayTime" value="1000"/>
                    </properties>
                </inbound-endpoint>
            </inbound-router>
        </service>
    </model>
</mule>
