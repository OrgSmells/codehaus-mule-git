<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:mule="http://www.mulesource.org/schema/mule/core/2.0"
       xmlns:mgmt="http://www.mulesource.org/schema/mule/management/2.0"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd
       http://www.mulesource.org/schema/mule/core/2.0 http://www.mulesource.org/schema/mule/core/2.0/mule.xsd
       http://www.mulesource.org/schema/mule/management/2.0 http://www.mulesource.org/schema/mule/management/2.0/mule-management.xsd">

    <mule:configuration serverId="test_Spring" defaultSynchronousEndpoints="false" domainId="org.mule">
        <mule:default-threading-profile maxBufferSize="0" maxThreadsActive="16"
                                        maxThreadsIdle="4" poolExhaustedAction="WAIT" threadTTL="60001"/>
    </mule:configuration>

    <mule:environment-properties>
        <entry key="doCompression" value="true"/>
        <entry key="beanProperty1" value="this was set from the manager properties!"/>
        <entry key="OS Version" value="not found"/>
    </mule:environment-properties>


    <!-- TODO ConnectionStrategies on endpoints -->
    <!-- Remove Endpoint Identifiers -->
    <!-- remove interceptor stacks -->
    <!--<mule:custom-transaction-manager-factory class="org.mule.tck.testmodels.mule.TestTransactionManagerFactory"/>-->
    <bean name="txManagerFactory" class="org.mule.tck.testmodels.mule.TestTransactionManagerFactory"/>

    <!--<mgmt:jmx-default-config name="jmxAgent"/>-->
    <!--<mgmt:rmi-server name="rmiAgent"/>-->
    <!--<mgmt:jmx-server name="jmxAgent">-->
        <!--<mgmt:connector-server url="service:jmx:rmi:///jndi/rmi://localhost:1099/server" rebind="true"/>-->
    <!--</mgmt:jmx-server>-->

    <!--<mgmt:chainsaw-notifications chainsawHost="localhost" chainsawPort="20202" name="chainsaw">-->
    <!--<mgmt:level-mappings>-->
    <!--<entry key="ModelNotification.stop" value="warn"/>-->
    <!--</mgmt:level-mappings>-->
    <!--</mgmt:chainsaw-notifications>-->

    <mule:custom-connector name="dummyConnector" class="org.mule.tck.testmodels.mule.TestConnector">

        <mule:dispatcher-threading-profile maxBufferSize="2"/>
        <mule:custom-exception-strategy class="org.mule.tck.testmodels.mule.TestExceptionStrategy"/>
    </mule:custom-connector>

    <mule:custom-transformer name="TestCompressionTransformer"
                             class="org.mule.tck.testmodels.mule.TestCompressionTransformer"
                             returnClass="java.lang.String">
        <!--<mule:source-type class="java.lang.String"/>-->
        <mule:property name="beanProperty2" value="12"/>
        <mule:property name="containerProperty" value="myString"/>
    </mule:custom-transformer>

    <mule:transformer-no-action name="Default"/>

    <mule:endpoint name="fruitBowlEndpoint" address="test://fruitBowlPublishQ">
        <mule:xml-jxpath-filter expectedValue="bar" pattern="name">
            <mule:namespace prefix="foo" uri="http://foo.com"/>
            <mule:namespace prefix="bar" uri="http://bar.com"/>
        </mule:xml-jxpath-filter>
    </mule:endpoint>
    <mule:endpoint name="waterMelonEndpoint" address="test://test.queue"/>
    <mule:endpoint name="appleInEndpoint" address="test://AppleQueue"/>
    <mule:endpoint name="appleResponseEndpoint" address="test://AppleResponseQueue"/>
    <mule:endpoint name="orangeEndpoint" address="test://orangeQ">
        <mule:properties>
            <entry key="beanProperty2" value="12"/>
            <entry key="containerProperty" value="myString"/>
        </mule:properties>
    </mule:endpoint>

    <!-- TODO RM*: Add an interceptor wrapper and use spring AOP to configure these -->
    <!--<interceptor-stack name="default">-->
    <!--<interceptor className="org.mule.interceptors.LoggingInterceptor"/>-->
    <!--<interceptor className="org.mule.interceptors.TimerInterceptor"/>-->
    <!--</interceptor-stack>-->

    <bean name="apple" class="org.mule.tck.testmodels.fruit.Apple"/>

    <bean name="orange" class="org.mule.tck.testmodels.fruit.Orange"/>

    <mule:model-seda name="main">

        <mule:custom-exception-strategy class="org.mule.tck.testmodels.mule.TestExceptionStrategy">
            <mule:endpoint address=" test://component.exceptions "/>
        </mule:custom-exception-strategy>

        <mule:custom-entrypoint-resolver class="org.mule.tck.testmodels.mule.TestEntryPointResolver"/>


        <mule:component-lifecycle-adapter-factory
                class="org.mule.tck.testmodels.mule.TestDefaultLifecycleAdapterFactory"/>

        <mule:service name="orangeComponent">
            <mule:component scope="singleton" instance-ref="orange"/>
            <mule:inbound-router>

                <mule:forwarding-catch-all-strategy>
                    <mule:endpoint address="test2://catch.all"/>
                </mule:forwarding-catch-all-strategy>
                <mule:endpoint name="Orange" address="test://orange/" transformers="TestCompressionTransformer"
                               responseTransformers="TestCompressionTransformer"/>
                <mule:endpoint ref="orangeEndpoint" transformers="TestCompressionTransformer">
                    <mule:payload-type-filter expectedType="java.lang.String"/>
                    <mule:properties>
                        <entry key="testLocal" value="value1"/>
                    </mule:properties>
                </mule:endpoint>
            </mule:inbound-router>

            <mule:nested-router>
                <mule:binding interface="org.mule.tck.testmodels.fruit.FruitCleaner" method="wash">
                    <mule:endpoint address="test://do.wash"/>
                </mule:binding>
                <mule:binding interface="org.mule.tck.testmodels.fruit.FruitCleaner" method="polish">
                    <mule:endpoint address="test://do.polish"/>
                </mule:binding>
            </mule:nested-router>

            <mule:outbound-router>
                <mule:outbound-pass-through-router>
                    <mule:endpoint ref="appleInEndpoint" transformers="TestCompressionTransformer"/>
                </mule:outbound-pass-through-router>
            </mule:outbound-router>

            <mule:response-router timeout="10001">
                <mule:endpoint address="test://response1"/>
                <mule:endpoint ref="appleResponseEndpoint"/>
                <mule:custom-response-router class="org.mule.tck.testmodels.mule.TestResponseAggregator"/>
            </mule:response-router>

            <mule:default-component-exception-strategy>
                <mule:endpoint address="test://orange.exceptions"/>
            </mule:default-component-exception-strategy>

            <mule:meta-info>
                <entry key="brand" value="Juicy Baby!"/>
                <entry key="segments" value="9"/>
                <entry key="radius" value="4.21"/>
                <entry key="mapProperties">
                    <map>
                        <entry key="prop1" value="prop1"/>
                        <entry key="prop2" value="prop2"/>
                    </map>
                </entry>
                <entry key="listProperties">
                    <list>
                        <value>prop1</value>
                        <value>prop2</value>
                        <value>prop3</value>
                    </list>
                </entry>
                <entry key="arrayProperties">
                    <list>
                        <value>prop4</value>
                        <value>prop5</value>
                        <value>prop6</value>
                    </list>
                </entry>
            </mule:meta-info>
        </mule:service>

        <mule:service name="appleComponent">
            <mule:component scope="singleton" instance-ref="apple"/>
            <mule:inbound-router>
                <mule:custom-catch-all-strategy class="org.mule.tck.testmodels.mule.TestCatchAllStrategy"/>
                <mule:endpoint ref="appleInEndpoint"/>
                <mule:selective-consumer-router>
                    <mule:payload-type-filter expectedType="java.lang.String"/>
                </mule:selective-consumer-router>
                <mule:idempotent-receiver-router>
                </mule:idempotent-receiver-router>
            </mule:inbound-router>

            <mule:outbound-router>
                <mule:custom-catch-all-strategy class="org.mule.tck.testmodels.mule.TestCatchAllStrategy"/>
                <mule:filtering-router transformers="TestCompressionTransformer">
                    <mule:endpoint address="test://appleQ2" name="TestApple-Out"/>
                    <mule:payload-type-filter expectedType="java.lang.String"/>
                </mule:filtering-router>

                <mule:filtering-router>
                    <mule:endpoint ref="waterMelonEndpoint"/>
                    <mule:and-filter>
                        <mule:regex-filter pattern="the quick brown (.*)"/>
                        <mule:regex-filter pattern="(.*) brown (.*)"/>
                    </mule:and-filter>
                </mule:filtering-router>
            </mule:outbound-router>

            <!--<mule:custom-exception-strategy class="org.mule.impl.DefaultExceptionStrategy"/>-->
            <mule:default-connector-exception-strategy/>
        </mule:service>
    </mule:model-seda>
</beans>