<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mule="http://www.mulesource.org/schema/mule/core/2.0"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.mulesource.org/schema/mule/core/2.0 META-INF/mule.xsd">

    <bean name="_muleManagementContext" class="org.mule.config.spring.ManagementContextFactoryBean"
          depends-on="_muleRegistry">
        <constructor-arg ref="_muleLifecycleManager"/>
    </bean>

    <bean id="customEditorConfigurer" class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="customEditors">
            <map>
                <entry key="org.mule.umo.transformer.UMOTransformer">
                    <bean class="org.mule.config.spring.editors.TransformerPropertyEditor"/>
                </entry>
                <entry key="org.mule.umo.provider.UMOConnector">
                    <bean class="org.mule.config.spring.editors.ConnectorPropertyEditor"/>
                </entry>
                <entry key="org.mule.umo.endpoint.UMOEndpointURI">
                    <bean class="org.mule.config.spring.editors.EndpointURIPropertyEditor"/>
                </entry>
            </map>
        </property>
    </bean>

    <bean name="_muleManagementContextProcessor" class="org.mule.config.spring.ManagementContextPostProcessor"
          depends-on="_muleRegistry"/>

    <bean name="_muleRegisterServiceProcessor" class="org.mule.config.spring.processors.RegisterServicePostProcessor"/>

    <bean name="_muleObjectNameProcessor" class="org.mule.config.spring.processors.MuleObjectNameProcessor"/>

    <bean name="_mulePropertyPlaceholderProcessor"
          class="org.mule.config.spring.processors.PropertyPlaceholderProcessor" depends-on="_muleRegistry">
        <property name="factories">
            <map>
                <entry key="hostname">
                    <bean class="org.mule.config.factories.HostNameFactory"/>
                </entry>
            </map>
        </property>
    </bean>

    <bean name="_muleRegistry" class="org.mule.config.spring.factories.SpringRegistryFactoryBean">
    </bean>

    <bean name="_muleSystemModel" class="org.mule.config.spring.factories.SystemModelFactoryBean"
          depends-on="_muleManagementContext"/>

    <mule:configuration
            serverId="_defaultx"
            defaultSynchronousEndpoints="false"
            domainId="org.mule"
            defaultRemoteSync="false"
            defaultSynchronousEventTimeout="3000"
            defaultEncoding="UTF-8"
            defaultTransactionTimeout="5000"
            workingDirectory=".mule">

        <mule:default-threading-profile maxBufferSize="0" maxThreadsActive="8"
                                        maxThreadsIdle="4" poolExhaustedAction="WAIT"/>
    </mule:configuration>

    <bean name="_muleLifecycleManager" class="org.mule.impl.lifecycle.GenericLifecycleManager" scope="prototype">
        <property name="lifecycles">
            <set>
                <ref bean="_muleInitLifecycle"/>
                <ref bean="_muleStartLifecycle"/>
                <ref bean="_muleStopLifecycle"/>
                <ref bean="_muleDisposeLifecycle"/>
            </set>
        </property>
    </bean>

    <bean name="_muleInitLifecycle" class="org.mule.impl.lifecycle.ContainerManagedLifecyclePhase">
        <constructor-arg value="initialise"/>
        <constructor-arg value="org.mule.umo.lifecycle.Initialisable"/>
    </bean>

    <bean name="_muleStartLifecycle" class="org.mule.impl.lifecycle.phases.ManagementContextStartPhase"/>

    <bean name="_muleStopLifecycle" class="org.mule.impl.lifecycle.phases.ManagementContextStopPhase"/>

    <bean name="_muleDisposeLifecycle" class="org.mule.impl.lifecycle.ContainerManagedLifecyclePhase">
        <constructor-arg value="dispose"/>
        <constructor-arg value="org.mule.umo.lifecycle.Disposable"/>
    </bean>

    <bean name="_muleQueueManager" class="org.mule.util.queue.TransactionalQueueManager">
        <property name="persistenceStrategy">
            <bean class="org.mule.util.queue.CachingPersistenceStrategy">
                <constructor-arg>
                    <bean class="org.mule.util.queue.MemoryPersistenceStrategy"/>
                </constructor-arg>
            </bean>
        </property>
    </bean>

    <bean name="_muleNotificationManager" class="org.mule.impl.internal.notifications.ServerNotificationManager">
        <property name="eventTypes">
            <map>
                <!-- we'll probably want to encapsulate these in to boolean switches -->
                <entry key="org.mule.impl.internal.notifications.ManagerNotificationListener"
                       value="org.mule.impl.internal.notifications.ManagerNotification"/>
                <entry key="org.mule.impl.internal.notifications.ModelNotificationListener"
                       value="org.mule.impl.internal.notifications.ModelNotification"/>
                <entry key="org.mule.impl.internal.notifications.ComponentNotificationListener"
                       value="org.mule.impl.internal.notifications.ComponentNotification"/>
                <entry key="org.mule.impl.internal.notifications.SecurityNotificationListener"
                       value="org.mule.impl.internal.notifications.SecurityNotification"/>
                <entry key="org.mule.impl.internal.notifications.ManagementNotificationListener"
                       value="org.mule.impl.internal.notifications.ManagementNotification"/>
                <entry key="org.mule.impl.internal.notifications.AdminNotificationListener"
                       value="org.mule.impl.internal.notifications.AdminNotification"/>
                <entry key="org.mule.impl.internal.notifications.ConnectionNotificationListener"
                       value="org.mule.impl.internal.notifications.ConnectionNotification"/>
                <entry key="org.mule.impl.internal.notifications.RegistryNotificationListener"
                       value="org.mule.impl.internal.notifications.RegistryNotification"/>
                <entry key="org.mule.impl.internal.notifications.CustomNotificationListener"
                       value="org.mule.impl.internal.notifications.CustomNotification"/>

                <!--<entry key="org.mule.impl.internal.notifications.MessageNotification" value="org.mule.impl.internal.notifications.MessageNotificationListener"/>-->

            </map>
        </property>
    </bean>

    <bean name="_muleWorkManager" class="org.mule.impl.work.MuleWorkManager">
        <constructor-arg ref="_muleDefaultThreadingProfile"/>
        <constructor-arg value="MuleServer"/>
    </bean>

    <bean name="_muleSecurityManager" class="org.mule.impl.security.MuleSecurityManager"/>

    <bean name="_muleDefaultThreadingProfile" class="org.mule.config.ThreadingProfile">
        <property name="maxThreadsActive" value="8"/>
        <property name="maxThreadsIdle" value="4"/>
        <property name="poolExhaustedActionString" value="WAIT"/>
    </bean>
    <!--<mule:properties-container includeSystemProperties="true" name="_muleSystemModelProperties"/>-->
</beans>
