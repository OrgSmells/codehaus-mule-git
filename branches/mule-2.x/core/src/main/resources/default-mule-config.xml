<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mule="http://www.mulesource.org/schema/mule/core/2.0"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.mulesource.org/schema/mule/core/2.0 http://www.mulesource.org/schema/mule/core/2.0/mule.xsd"
       default-init-method="initialise">

    <bean name="_muleManagementContext" class="org.mule.config.spring.ManagementContextFactoryBean" 
          depends-on="_muleRegistry">
        <constructor-arg ref="_muleLifecycleManager"/>
        <property name="workManager" ref="_muleWorkManager"/>
    </bean>

    <bean id="customEditorConfigurer" class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="customEditors">
            <map>
                <entry key="org.mule.umo.provider.UMOConnector">
                    <bean class="org.mule.config.spring.editors.ConnectorPropertyEditor"/>
                </entry>
                <!-- entry key="org.mule.umo.endpoint.UMOEndpointURI">
                    <bean class="org.mule.config.spring.editors.EndpointURIPropertyEditor"/>
                </entry -->
                <entry key="org.mule.config.spring.parsers.specific.URIBuilder">
                    <bean class="org.mule.config.spring.editors.URIBuilderPropertyEditor"/>
                </entry>
            </map>
        </property>
    </bean>

    <bean name="_muleManagementContextProcessor" class="org.mule.config.spring.ManagementContextPostProcessor"
          depends-on="_muleRegistry"/>

    <bean name="_muleObjectNameProcessor" class="org.mule.config.spring.processors.MuleObjectNameProcessor"/>

    <bean name="_mulePropertyPlaceholderProcessor"
          class="org.mule.config.spring.processors.PropertyPlaceholderProcessor" depends-on="_muleRegistry">
        <property name="factories">
            <map>
                <entry key="hostname">
                    <bean class="org.mule.config.factories.HostNameFactory"/>
                </entry>
            </map>
        </property>
        <!-- other processors may be applied later -->
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>

    <bean name="_muleRegistry" class="org.mule.config.spring.factories.SpringRegistryFactoryBean">
    </bean>

<!-- 
     <bean name="_muleSimpleRegistryBootstrap" class="org.mule.config.bootstrap.SimpleRegistryBootstrap"
          depends-on="_muleRegistry"/>
-->
    <mule:mule name="_muleSystemModel">

    <bean name="_defaultx" class="org.mule.config.MuleConfiguration"/>
<!-- 
        <mule:configuration
                serverId="_defaultx"
                defaultSynchronousEndpoints="false"
                domainId="org.mule"
                defaultRemoteSync="false"
                defaultSynchronousEventTimeout="3000"
                defaultEncoding="UTF-8"
                defaultTransactionTimeout="5000"
                workingDirectory=".mule"/>
 -->
 
        <mule:model name="_muleSystemModel" />

    </mule:mule>

    <bean name="_muleLifecycleManager" class="org.mule.impl.lifecycle.GenericLifecycleManager">
        <property name="lifecycles">
            <set>
                <ref bean="_muleInitLifecycle"/>
                <ref bean="_muleStartLifecycle"/>
                <ref bean="_muleStopLifecycle"/>
                <ref bean="_muleDisposeLifecycle"/>
            </set>
        </property>
    </bean>

    <bean name="_muleInitLifecycle" class="org.mule.impl.lifecycle.ContainerManagedLifecyclePhase">
        <constructor-arg value="initialise"/>
        <constructor-arg value="org.mule.umo.lifecycle.Initialisable"/>
        <constructor-arg value="dispose"/>
    </bean>

    <bean name="_muleStartLifecycle" class="org.mule.impl.lifecycle.phases.ManagementContextStartPhase">
        <!-- Creates a circular reference 
        <constructor-arg ref="_muleNotificationManager"/> -->
    </bean>
 
    <bean name="_muleStopLifecycle" class="org.mule.impl.lifecycle.phases.ManagementContextStopPhase">
        <!-- Creates a circular reference 
        <constructor-arg ref="_muleNotificationManager"/> -->
    </bean>
 
    <bean name="_muleDisposeLifecycle" class="org.mule.impl.lifecycle.ContainerManagedLifecyclePhase">
        <constructor-arg value="dispose"/>
        <constructor-arg value="org.mule.umo.lifecycle.Disposable"/>
        <constructor-arg value="initialise"/>
    </bean>

    <bean name="_muleQueueManager" class="org.mule.util.queue.TransactionalQueueManager">
        <property name="persistenceStrategy">
            <bean class="org.mule.util.queue.CachingPersistenceStrategy">
                <constructor-arg>
                    <bean class="org.mule.util.queue.MemoryPersistenceStrategy"/>
                </constructor-arg>
            </bean>
        </property>
    </bean>

    <bean name="_muleNotificationManager" class="org.mule.impl.internal.notifications.ServerNotificationManager">
        <property name="eventTypes">
            <map>
                <!-- we'll probably want to encapsulate these in to boolean switches -->
                <entry key="org.mule.impl.internal.notifications.ManagerNotificationListener"
                       value="org.mule.impl.internal.notifications.ManagerNotification"/>
                <entry key="org.mule.impl.internal.notifications.ModelNotificationListener"
                       value="org.mule.impl.internal.notifications.ModelNotification"/>
                <entry key="org.mule.impl.internal.notifications.ComponentNotificationListener"
                       value="org.mule.impl.internal.notifications.ComponentNotification"/>
                <entry key="org.mule.impl.internal.notifications.SecurityNotificationListener"
                       value="org.mule.impl.internal.notifications.SecurityNotification"/>
                <entry key="org.mule.impl.internal.notifications.ManagementNotificationListener"
                       value="org.mule.impl.internal.notifications.ManagementNotification"/>
                <entry key="org.mule.impl.internal.notifications.AdminNotificationListener"
                       value="org.mule.impl.internal.notifications.AdminNotification"/>
                <entry key="org.mule.impl.internal.notifications.ConnectionNotificationListener"
                       value="org.mule.impl.internal.notifications.ConnectionNotification"/>
                <entry key="org.mule.impl.internal.notifications.RegistryNotificationListener"
                       value="org.mule.impl.internal.notifications.RegistryNotification"/>
                <entry key="org.mule.impl.internal.notifications.CustomNotificationListener"
                       value="org.mule.impl.internal.notifications.CustomNotification"/>
                <entry key="org.mule.impl.internal.notifications.MessageNotificationListener" 
                       value="org.mule.impl.internal.notifications.MessageNotification"/>
                <entry key="org.mule.impl.internal.notifications.ExceptionNotificationListener"
                       value="org.mule.impl.internal.notifications.ExceptionNotification"/>
                <entry key="org.mule.impl.internal.notifications.TransactionNotificationListener"
                       value="org.mule.impl.internal.notifications.TransactionNotification"/>
            </map>
        </property>
    </bean>

    <bean name="_muleWorkManager" class="org.mule.impl.work.MuleWorkManager">
        <constructor-arg ref="defaultThreadingProfile"/>
        <constructor-arg value="MuleServer"/>
    </bean>

    <bean name="_muleSecurityManager" class="org.mule.impl.security.MuleSecurityManager"/>

    <bean name="_muleProperties" class="java.util.HashMap"/>
    
    <bean name="_muleEndpointFactory" class="org.mule.impl.endpoint.EndpointFactory" depends-on="_muleRegistry">
<!--        <property name="defaultEndpointBuilder" ref="_muleDefaultEndpointBuilder"/>-->
    </bean>

    <bean name="defaultThreadingProfile" class="org.mule.config.ChainedThreadingProfile">
        <property name="threadWaitTimeout" value="30"/>
        <property name="maxThreadsActive" value="10"/>
        <property name="maxThreadsIdle" value="10"/>
        <property name="maxBufferSize" value="0"/>
        <property name="threadTTL" value="60000"/>
        <property name="poolExhaustedAction" value="4"/>
    </bean>

    <bean name="defaultMessageDispatcherThreadingProfile" class="org.mule.config.ChainedThreadingProfile">
        <constructor-arg ref="defaultThreadingProfile"/>
    </bean>

    <bean name="defaultMessageReceiverThreadingProfile" class="org.mule.config.ChainedThreadingProfile">
        <constructor-arg ref="defaultThreadingProfile"/>
    </bean>

    <bean name="defaultComponentThreadingProfile" class="org.mule.config.ChainedThreadingProfile">
        <constructor-arg ref="defaultThreadingProfile"/>
    </bean>

<!--    <bean name="_muleDefaultEndpointBuilder" class="org.mule.impl.endpoint.EndpointBuilder"/>-->


    <!-- Default Transformers are now loaded from META-INF/services/org/mule/config/registry-bootstrap.properties so that
    the transformers will be available even when using the the TransientRegistry only -->
    
</beans>
