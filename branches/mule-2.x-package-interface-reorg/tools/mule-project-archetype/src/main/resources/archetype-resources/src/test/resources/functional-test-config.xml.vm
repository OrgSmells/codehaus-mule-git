<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesource.org/schema/mule/core/${MuleMajorMinorVersion}"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:spring="http://www.springframework.org/schema/beans"       
       xmlns:${ModuleNameLower}="http://www.mulesource.org/schema/mule/${ModuleNameLower}/${MuleMajorMinorVersion}"
    xsi:schemaLocation="
       http://www.mulesource.org/schema/mule/core/${MuleMajorMinorVersion} http://www.mulesource.org/schema/mule/core/${MuleMajorMinorVersion}/mule.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.mulesource.org/schema/mule/${ModuleNameLower}/${MuleMajorMinorVersion} http://www.mulesource.org/schema/mule/${ModuleNameLower}/${MuleMajorMinorVersion}/mule-${ModuleNameLower}.xsd">


    <!--
    TODO: You can define a test configuration here then from the ${ModuleName}TestCase you can fire events into
    Mule (using the MuleClient) and then assert the results.
    -->
    <model name="main">

        <service name="testService">
            <inbound-router>
                <inbound-endpoint address="vm://in" synchronous="true"/>
            </inbound-router>

            <component>
                <pooled-object class="org.mule.tck.functional.FunctionalTestComponent">
                    <properties>
                        <spring:entry key="addReceived" value="true"/>
                    </properties>
                </pooled-object>
            </component>

            <outbound-router>
                <outbound-pass-through-router>
                    <outbound-endpoint address="stdio://System.out"/>
                </outbound-pass-through-router>
            </outbound-router>
        </service>

    </model>

</mule>
