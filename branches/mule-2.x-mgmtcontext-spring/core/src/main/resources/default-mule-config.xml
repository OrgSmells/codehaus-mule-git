<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mule="http://www.mulesource.org/schema/mule/core/2.0"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.mulesource.org/schema/mule/core/2.0 http://www.mulesource.org/schema/mule/core/2.0/mule.xsd"
       default-init-method="initialise">

    <!-- Default ue configuration - the Muleconfiguration object should provide access to these values -->
    <bean name="mule.working.dir" class="java.lang.String">
        <constructor-arg value="./.mule"/>
    </bean>

    <bean name="_muleManagementContext" class="org.mule.config.spring.ManagementContextFactoryBean">
        <constructor-arg ref="_muleLifecycleManager"/>
        <property name="workManager" ref="_muleWorkManager"/>
    </bean>

    <bean id="customEditorConfigurer" class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="customEditors">
            <map>
                <entry key="org.mule.umo.provider.UMOConnector">
                    <bean class="org.mule.config.spring.editors.ConnectorPropertyEditor"/>
                </entry>
                <!-- entry key="org.mule.umo.endpoint.UMOEndpointURI">
                    <bean class="org.mule.config.spring.editors.EndpointURIPropertyEditor"/>
                </entry -->
                <entry key="org.mule.config.spring.parsers.specific.URIBuilder">
                    <bean class="org.mule.config.spring.editors.URIBuilderPropertyEditor"/>
                </entry>
            </map>
        </property>
    </bean>

    <bean name="_muleManagementContextProcessor" class="org.mule.config.spring.ManagementContextPostProcessor"/>

    <bean name="_muleObjectNameProcessor" class="org.mule.config.spring.processors.MuleObjectNameProcessor"/>

    <bean name="_mulePropertyPlaceholderProcessor"
          class="org.mule.config.spring.processors.PropertyPlaceholderProcessor">
        <property name="factories">
            <map>
                <entry key="hostname">
                    <bean class="org.mule.config.factories.HostNameFactory"/>
                </entry>
            </map>
        </property>
        <!-- other processors may be applied later -->
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>

    <bean name="_muleSimpleRegistryBootstrap" class="org.mule.config.bootstrap.SimpleRegistryBootstrap"
          depends-on="_muleManagementContext"/>

    <bean name="_muleNotificationManager"
          class="org.mule.impl.internal.notifications.manager.ServerNotificationManager"/>

    <bean name="_muleConfiguration" class="org.mule.config.MuleConfiguration"/>

    <mule:mule name="_muleSystemModel">


        <!-- Default configuration attributes are configured via default values in mule-core schema mule.xsd.
             Configuration element is required here so that spring creates a MuleConfiguration instance and
       	     populates it with defaults from schema 
        -->
        <mule:configuration/>

        <mule:notifications>
            <mule:notification event="MANAGER"/>
            <mule:notification event="MODEL"/>
            <mule:notification event="COMPONENT"/>
            <mule:notification event="SECURITY"/>
            <mule:notification event="MANAGEMENT"/>
            <mule:notification event="ADMIN"/>
            <mule:notification event="CONNECTION"/>
            <mule:notification event="REGISTRY"/>
            <mule:notification event="CUSTOM"/>
            <mule:notification event="MESSAGE"/>
            <mule:notification event="EXCEPTION"/>
            <mule:notification event="TRANSACTION"/>
        </mule:notifications>

        <mule:model name="_muleSystemModel"/>

    </mule:mule>

    <bean name="_muleLifecycleManager" class="org.mule.impl.lifecycle.GenericLifecycleManager" scope="prototype">
        <property name="lifecycles">
            <set>
                <ref bean="_muleInitLifecycle"/>
                <ref bean="_muleStartLifecycle"/>
                <ref bean="_muleStopLifecycle"/>
                <ref bean="_muleDisposeLifecycle"/>
            </set>
        </property>
    </bean>

    <!-- MULE-2275: Init is always taken care of by the Registry -->
    <bean name="_muleInitLifecycle" class="org.mule.impl.lifecycle.phases.ManagementContextInitialisePhase"/>

    <bean name="_muleStartLifecycle" class="org.mule.impl.lifecycle.phases.ManagementContextStartPhase"/>

    <bean name="_muleStopLifecycle" class="org.mule.impl.lifecycle.phases.ManagementContextStopPhase"/>

    <!-- MULE-2275Dispose can currently be called from the ManagmentContext to dispose the Registry -->
    <bean name="_muleDisposeLifecycle" class="org.mule.impl.lifecycle.phases.ManagementContextDisposePhase"/>

    <bean name="_muleQueueManager" class="org.mule.util.queue.TransactionalQueueManager">
        <property name="persistenceStrategy">
            <bean class="org.mule.util.queue.CachingPersistenceStrategy">
                <constructor-arg>
                    <bean class="org.mule.util.queue.MemoryPersistenceStrategy"/>
                </constructor-arg>
            </bean>
        </property>
    </bean>

    <bean name="_muleWorkManager" class="org.mule.impl.work.MuleWorkManager">
        <constructor-arg ref="defaultThreadingProfile"/>
        <constructor-arg value="MuleServer"/>
    </bean>

    <bean name="_muleSecurityManager" class="org.mule.impl.security.MuleSecurityManager"/>

    <bean name="_muleProperties" class="java.util.HashMap"/>

    <bean name="_muleEndpointFactory" class="org.mule.impl.endpoint.EndpointFactory"/>

    <bean name="defaultThreadingProfile" class="org.mule.config.ChainedThreadingProfile">
        <property name="threadWaitTimeout" value="30"/>
        <property name="maxThreadsActive" value="10"/>
        <property name="maxThreadsIdle" value="10"/>
        <property name="maxBufferSize" value="0"/>
        <property name="threadTTL" value="60000"/>
        <property name="poolExhaustedAction" value="4"/>
    </bean>

    <bean name="defaultMessageDispatcherThreadingProfile" class="org.mule.config.ChainedThreadingProfile">
        <constructor-arg ref="defaultThreadingProfile"/>
    </bean>

    <bean name="defaultMessageRequesterThreadingProfile" class="org.mule.config.ChainedThreadingProfile">
        <constructor-arg ref="defaultThreadingProfile"/>
    </bean>

    <bean name="defaultMessageReceiverThreadingProfile" class="org.mule.config.ChainedThreadingProfile">
        <constructor-arg ref="defaultThreadingProfile"/>
    </bean>

    <bean name="defaultComponentThreadingProfile" class="org.mule.config.ChainedThreadingProfile">
        <constructor-arg ref="defaultThreadingProfile"/>
    </bean>

    <!-- Default Transformers are now loaded from META-INF/services/org/mule/config/registry-bootstrap.properties so that
    the transformers will be available even when using the the TransientRegistry only -->

</beans>
