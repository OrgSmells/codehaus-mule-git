<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesource.org/schema/mule/core/2.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:spring="http://www.springframework.org/schema/beans"
       xmlns:xfire="http://www.mulesource.org/schema/mule/xfire/2.0"
       xmlns:vm="http://www.mulesource.org/schema/mule/vm/2.0"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.mulesource.org/schema/mule/core/2.0 http://www.mulesource.org/schema/mule/core/2.0/mule.xsd
       http://www.mulesource.org/schema/mule/xfire/2.0 http://www.mulesource.org/schema/mule/xfire/2.0/mule-xfire.xsd
       http://www.mulesource.org/schema/mule/vm/2.0 http://www.mulesource.org/schema/mule/vm/2.0/mule-vm.xsd">

    <!-- mule-environment-properties serverUrl="tcp://localhost:63500"/ -->

    <model name="Testing_an_xfire_service_using_axis">

        <!--Hosting the XFire service-->
        <service name="XfireService">
            <inbound-router>
                <xfire:inbound-endpoint address="http://localhost:63382/services"/>
            </inbound-router>
            <component class="org.mule.tck.testmodels.services.TestComponent"/>
        </service>

        <!--Accessing an XFire hosted web-service using Axis-->
        <service name="BridgeToXfireHello">
            <inbound-router>
                <vm:inbound-endpoint path="xfire.in"/>
                <forwarding-router/>
            </inbound-router>
            <outbound-router>
                <outbound-pass-through-router>
                    <!-- assume this can be translated to the new config, but since test is currently blocked
                         i haven't tried (need to run test to be sure translation ok) -->
                    <outbound-endpoint address="axis:http://localhost:63382/services/XfireService?method=receive">
                        <properties>
                            <spring:entry key="soapAction" value="${methodNamespace}${method}"/>
                            <spring:entry key="soapMethods">
                                <spring:list>
                                    <spring:bean class="org.mule.providers.soap.SoapMethod">
                                        <!-- the strange qname syntax here will generate a QName instance via a property editor -->
                                        <spring:constructor-arg value="qname{add:http://muleumo.org/Calc}"/>
                                        <spring:constructor-arg>
                                            <spring:list>
                                                <spring:value>s;string;in</spring:value>
                                                <spring:value>return;string</spring:value>
                                            </spring:list>
                                        </spring:constructor-arg>
                                    </spring:bean>
                                </spring:list>
                            </spring:entry>
                        </properties>
                    </outbound-endpoint>
                </outbound-pass-through-router>
            </outbound-router>
        </service>
        
    </model>
    
</mule>

