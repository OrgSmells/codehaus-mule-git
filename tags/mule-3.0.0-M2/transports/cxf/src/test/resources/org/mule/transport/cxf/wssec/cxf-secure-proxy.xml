<mule xmlns="http://www.mulesoft.org/schema/mule/core"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
       xmlns:file="http://www.mulesoft.org/schema/mule/file"
       xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
       xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml"
       xmlns:spring="http://www.springframework.org/schema/beans"
       xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf"
       xmlns:mule-ss="http://www.mulesoft.org/schema/mule/spring-security"
       xmlns:ss="http://www.springframework.org/schema/security"
       xsi:schemaLocation=" 
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.0/mule.xsd
       http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/3.0/mule-vm.xsd
       http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/3.0/mule-jms.xsd
       http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/3.0/mule-xml.xsd
       http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/3.0/mule-cxf.xsd
       http://www.mulesoft.org/schema/mule/spring-security http://www.mulesoft.org/schema/mule/spring-security/3.0/mule-spring-security.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.xsd       
       http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/3.0/mule-file.xsd"> 
       
    <model name="SecurityTesting">

          <service name="secureProxy">
              <description>
                  Secure Proxy using Spring Security
              </description>
            <inbound>
                <cxf:inbound-endpoint address="http://localhost:63081/proxy-envelope"
                                      proxy="true"
                                      payload="envelope">
                     <cxf:inInterceptors>
                        <spring:bean class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor">
                               <spring:property name="properties" ref="wss4jInConfiguration" />
                        </spring:bean>
                    </cxf:inInterceptors>
                </cxf:inbound-endpoint>
            </inbound>
            <outbound>
                <pass-through-router>
                    <cxf:outbound-endpoint address="http://localhost:63081/echo" proxy="true" payload="envelope">
                        <cxf:outInterceptors>
                          <spring:bean class="org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor">
                               <spring:property name="properties" ref="wss4jOutConfiguration" />
                          </spring:bean>
                        </cxf:outInterceptors>
                    </cxf:outbound-endpoint>
                </pass-through-router>
            </outbound>
        </service>

          <service name="secureProxy2">
              <description>
                  Secure Proxy using Spring Security
              </description>
            <inbound>
                <cxf:inbound-endpoint address="http://localhost:63081/proxy-body"
                                      proxy="true">
                     <cxf:inInterceptors>
                        <spring:bean class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor">
                               <spring:property name="properties" ref="wss4jInConfiguration" />
                        </spring:bean>
                    </cxf:inInterceptors>
                </cxf:inbound-endpoint>
            </inbound>
            <outbound>
                <pass-through-router>
                    <cxf:outbound-endpoint address="http://localhost:63081/echo" proxy="true">
                        <cxf:outInterceptors>
                          <spring:bean class="org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor">
                               <spring:property name="properties" ref="wss4jOutConfiguration" />
                          </spring:bean>
                        </cxf:outInterceptors>
                    </cxf:outbound-endpoint>
                </pass-through-router>
            </outbound>
        </service>

        <service name="echoService">
            <inbound>
                <inbound-endpoint address="http://localhost:63081/echo"/>
            </inbound>
            <echo-component/>
        </service>

    </model>
</mule> 
