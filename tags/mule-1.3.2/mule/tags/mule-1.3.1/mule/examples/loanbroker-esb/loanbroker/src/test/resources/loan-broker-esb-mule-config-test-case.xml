<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mule-configuration PUBLIC "-//MuleSource //DTD mule-configuration XML V1.0//EN"
                                "http://mule.mulesource.org/dtds/mule-configuration.dtd">

<!--  This is the configuration for the Loan Broker ESB example -->
<!-- See http://mule.mulesource.org/LoanBroker  for more information, diagrams and even a presentation! -->

<mule-configuration id="Mule_Loan_broker_ESB" version="1.0">

    <description>
    The Loan Broker ESB example implements the Loan Broker Example using an ESB topology.
    See http://mule.mulesource.org/LoanBroker+ESB for details.
    </description>

    <container-context className="org.mule.extras.spring.SpringContainerContext">
        <properties>
            <text-property name="configuration">
                <![CDATA[
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
                <beans>
                <bean id="jmsConnectionFactory"
                    class="org.activemq.ActiveMQConnectionFactory">
                    <property name="brokerURL"><value>vm://localhost</value></property>
                    <property name="useEmbeddedBroker"><value>true</value></property>
                    <property name="brokerContainerFactory">
                        <bean id="bcf" class="org.activemq.broker.impl.BrokerContainerFactoryImpl">
                            <constructor-arg index="0">
                                <bean id="vmp" class="org.activemq.store.vm.VMPersistenceAdapter"/>
                            </constructor-arg>
                        </bean>
                    </property>
                </bean>
                </beans>
                ]]>
            </text-property>
        </properties>
    </container-context>

    <!-- Testing with ActiveMq -->
    <connector name="jmsConnector" className="org.mule.providers.jms.JmsConnector">
        <properties>
            <container-property name="connectionFactory" reference="jmsConnectionFactory"/>
            <property name="specification" value="1.1"/>
        </properties>
    </connector>

    <connector name="ejbConnector" className="org.mule.providers.ejb.EjbConnector">
        <properties>
            <property name="jndiInitialFactory" value="org.openejb.client.LocalInitialContextFactory"/>
            <property name="securityPolicy" value="security.policy"/>
            <map name="jndiProviderProperties">
                <property name="openejb.base" value="."/>
                <property name="openejb.configuration" value="src/test/resources/openejb.conf"/>
                <property name="logging.conf" value="conf/log4j.properties"/> 
                <property name="openejb.nobanner" value="true"/>
            </map>
        </properties>
    </connector>

    <endpoint-identifiers>
        <endpoint-identifier name="LoanBrokerRequestsREST" value="jetty:rest://localhost:8080/loanbroker"/>
        <endpoint-identifier name="LoanBrokerRequests" value="vm://loan.broker.requests"/>
        <endpoint-identifier name="LoanQuotes" value="jms://esb.loan.quotes"/>
        <endpoint-identifier name="CreditAgencyGateway" value="jms://esb.credit.agency"/>
        <!-- here we're telling Mule to invoke a remote Ejb directly (not host a
        proxy service for the remote object as with the other example in mule-config-with-ejb-container.xml example)
        -->
        <endpoint-identifier name="CreditAgency" value="ejb://localhost:1099/local/CreditAgency?method=getCreditProfile"/>
        <endpoint-identifier name="LenderGateway" value="jms://esb.lender.service"/>
        <endpoint-identifier name="LenderService" value="vm://lender.service"/>
        <endpoint-identifier name="BankingGateway" value="jms://esb.banks"/>
        <endpoint-identifier name="Bank1" value="axis:http://localhost:10080/mule"/>
        <endpoint-identifier name="Bank2" value="axis:http://localhost:20080/mule"/>
        <endpoint-identifier name="Bank3" value="axis:http://localhost:30080/mule"/>
        <endpoint-identifier name="Bank4" value="axis:http://localhost:40080/mule"/>
        <endpoint-identifier name="Bank5" value="axis:http://localhost:50080/mule"/>
    </endpoint-identifiers>

    <transformers>
        <transformer name="RestRequestToCustomerRequest" className="org.mule.samples.loanbroker.esb.transformers.RestRequestToCustomerRequest"/>
        <transformer name="LoanQuoteRequestToCustomer" className="org.mule.samples.loanbroker.esb.transformers.LoanQuoteRequestToCustomer"/>
        <transformer name="LoanQuoteRequestToCreditProfileArgs" className="org.mule.samples.loanbroker.esb.transformers.LoanQuoteRequestToCreditProfileArgs"/>
        <transformer name="CreditProfileXmlToCreditProfile" className="org.mule.samples.loanbroker.esb.transformers.CreditProfileXmlToCreditProfile"/>
    </transformers>

    <!--
        The Mule model initialises and manages your UMO components
    -->
    <model name="loan-broker">
        <!--
        The loan broker is used to receive loan requests
        -->
        <mule-descriptor name="LoanBroker"
            implementation="org.mule.samples.loanbroker.esb.LoanBroker">

            <inbound-router>
                <!--<endpoint address="LoanBrokerRequestsREST" transformers="RestRequestToCustomerRequest"/>-->
                <endpoint address="LoanBrokerRequests"/>
            </inbound-router>

            <outbound-router>
                <router className="org.mule.routing.outbound.OutboundPassThroughRouter">
                    <endpoint address="CreditAgencyGateway"/>
                </router>
            </outbound-router>

            <response-router timeout="10000">
                <endpoint address="LoanQuotes"/>
                <router className="org.mule.samples.loanbroker.esb.routers.BankQuotesResponseAggregator"/>
            </response-router>
        </mule-descriptor>

        <!--
        The credit agency service will get the credit profile for a customer
        -->
         <mule-descriptor name="CreditAgencyGateway"
            implementation="org.mule.components.builder.ReflectionMessageBuilder">

            <inbound-router>
                <endpoint address="CreditAgencyGateway"/>
            </inbound-router>

            <outbound-router>
                <router className="org.mule.routing.outbound.FilteringOutboundRouter">
                    <!--
                        We invoke the credit Agency service using remoteSync which means that a response
                        will be returned from the service. there is also a responseTransformer that will
                        convert the Xml returned from the CreditAgency Ejb into a CreditProfile object
                    -->
                    <endpoint remoteSync="true" transformers="LoanQuoteRequestToCreditProfileArgs"
                        responseTransformers="CreditProfileXmlToCreditProfile" address="CreditAgency"/>
                    <endpoint address="LenderGateway"/>
                </router>
            </outbound-router>
        </mule-descriptor>

        <mule-descriptor name="LenderGateway"
                         implementation="org.mule.components.simple.BridgeComponent">

            <inbound-router>
                <endpoint address="LenderGateway"/>
            </inbound-router>

            <outbound-router>
                <router className="org.mule.routing.outbound.ChainingRouter">
                    <endpoint remoteSync="true" address="LenderService"/>
                    <endpoint address="BankingGateway"/>
                </router>
            </outbound-router>
        </mule-descriptor>

        <mule-descriptor name="LenderService"
                         implementation="org.mule.samples.loanbroker.esb.lender.LenderService">

            <inbound-router>
                <endpoint address="LenderService"/>
            </inbound-router>
        </mule-descriptor>

        <mule-descriptor name="BankingGateway"
            implementation="org.mule.components.simple.BridgeComponent">

            <inbound-router>
                <endpoint address="BankingGateway"/>
            </inbound-router>

            <outbound-router>
                <router className="org.mule.routing.outbound.FilteringOutboundRouter">
                    <filter expectedType="org.mule.samples.loanbroker.esb.message.LoanQuote"
                        className="org.mule.routing.filters.PayloadTypeFilter" />
                </router>
                <router className="org.mule.routing.outbound.StaticRecipientList">
                    <reply-to address="LoanQuotes"/>
                </router>
            </outbound-router>
        </mule-descriptor>

        <!--
        These are mock bank services that represent remote bank loan services
        One or more of these are selected by the LenderService and a request
        is routed to them.   The lenderService outbound router also defines a
        replyTo property which will be used by Mule to route the responses back
        to the LoanBrokerQuotes destination
        -->
        <mule-descriptor name="Bank1"
            inboundEndpoint="Bank1"
            implementation="org.mule.samples.loanbroker.esb.bank.Bank">
        </mule-descriptor>

        <mule-descriptor name="Bank2"
            inboundEndpoint="Bank2"
            implementation="org.mule.samples.loanbroker.esb.bank.Bank">
        </mule-descriptor>

        <mule-descriptor name="Bank3"
            inboundEndpoint="Bank3"
            implementation="org.mule.samples.loanbroker.esb.bank.Bank">
        </mule-descriptor>

        <mule-descriptor name="Bank4"
            inboundEndpoint="Bank4"
            implementation="org.mule.samples.loanbroker.esb.bank.Bank">
        </mule-descriptor>

        <mule-descriptor name="Bank5"
            inboundEndpoint="Bank5"
            implementation="org.mule.samples.loanbroker.esb.bank.Bank">
        </mule-descriptor>
    </model>
</mule-configuration>
