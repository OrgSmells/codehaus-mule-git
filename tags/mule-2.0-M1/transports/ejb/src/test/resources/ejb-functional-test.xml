<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mule="http://www.mulesource.org/schema/mule/core/2.0"
       xmlns:ejb="http://www.mulesource.org/schema/mule/ejb/2.0"
       xmlns:vm="http://www.mulesource.org/schema/mule/vm/2.0"
       xsi:schemaLocation="
               http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
               http://www.mulesource.org/schema/mule/core/2.0 http://www.mulesource.org/schema/mule/core/2.0/mule.xsd
               http://www.mulesource.org/schema/mule/vm/2.0 http://www.mulesource.org/schema/mule/vm/2.0/mule-vm.xsd
               http://www.mulesource.org/schema/mule/ejb/2.0 http://www.mulesource.org/schema/mule/ejb/2.0/mule-ejb.xsd">

    <!-- in a typical production environment you'd set jndiProviderUrl to the jndi server
         instead, here, we need to provide a "dummy" context -->

    <bean name="jndiFactory" class="org.mule.providers.ejb.SimpleEjbContextFactory"/>
    <bean name="dummy" class="org.mule.impl.container.DummyEjbHomeProxy"/>
    <bean name="jndiContext" factory-bean="jndiFactory" factory-method="create">
        <constructor-arg>
            <map>
                <entry key="TestService" value-ref="dummy"/>
            </map>
        </constructor-arg>
    </bean>

    <ejb:connector name="ejb" jndiContext-ref="jndiContext" securityPolicy="rmi.policy"/>

</beans>
