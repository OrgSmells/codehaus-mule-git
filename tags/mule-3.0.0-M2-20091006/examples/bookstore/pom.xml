<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.mule.examples</groupId>
        <artifactId>mule-examples</artifactId>
        <version>3.0.0-M2-20091006</version>
    </parent>

    <artifactId>mule-example-bookstore-parent</artifactId>
    <packaging>pom</packaging>
    <name>Bookstore Example</name>
    <description>Bookstore Example App</description>

    <!--
        ATTENTION: if you change any version here, make sure to change the pom
        in the dist directory, too
    -->
    <properties>
        <muleVersion>3.0.0-M2-20091006</muleVersion>
        <cxfVersion>2.1.2</cxfVersion>
        <geronimoSpecsWsMetadataVersion>1.1.2</geronimoSpecsWsMetadataVersion>
        <jettyVersion>6.1.11</jettyVersion>
        <xalanVersion>2.7.1</xalanVersion>
    </properties>

    <modules>
        <module>api</module>
        <module>admin-web</module>
        <module>bookstore-web</module>
    </modules>

    <build>
        <!-- TODO We could make tomcat:run the top-level goal so that typing "mvn" would run both webapps.
        However, there's no way to fork the two modules yet, so the first one blocks the second one, see:
        https://jira.codehaus.org/browse/MTOMCAT-20

        <defaultGoal>tomcat:run</defaultGoal>
        -->
        <defaultGoal>install</defaultGoal>
    </build>
</project>
