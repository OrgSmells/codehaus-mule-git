<!--
Assembly descriptor for the full Mule distribution.
-->
<assembly>
  <id>full</id>
  <formats>
    <format>zip</format>
    <format>tar.gz</format>
  </formats>

  <fileSets>
    <fileSet>
      <directory>../src/main/resources</directory>
      <outputDirectory></outputDirectory>
    </fileSet>

    <!-- Make binary directories executable. -->
    <fileSet>
      <directory>../src/main/resources/bin</directory>
      <outputDirectory>bin</outputDirectory>
      <fileMode>755</fileMode>
    </fileSet>
    <fileSet>
      <directory>../src/main/resources/bin</directory>
      <outputDirectory>bin</outputDirectory>
      <fileMode>644</fileMode>
      <includes>
          <include>*.txt</include>
      </includes>
    </fileSet>
    <fileSet>
      <directory>../src/main/resources/lib/boot/exec</directory>
      <outputDirectory>lib/boot/exec</outputDirectory>
      <fileMode>755</fileMode>
    </fileSet>
    <fileSet>
      <directory>../src/main/resources/lib/boot/exec</directory>
      <outputDirectory>lib/boot/exec</outputDirectory>
      <fileMode>644</fileMode>
      <includes>
          <include>*.txt</include>
      </includes>
    </fileSet>

    <!-- Copy the USAGE.txt file to the root directory for visibility -->
    <fileSet>
      <directory>../src/main/resources/bin</directory>
      <outputDirectory></outputDirectory>
      <includes>
          <include>USAGE.txt</include>
      </includes>
    </fileSet>

    <!-- Copy javadocs ("mvn site:site" must have been run previously) -->
    <fileSet>
      <directory>../../../target/site/apidocs</directory>
      <outputDirectory>docs/api</outputDirectory>
    </fileSet>

    <!-- Copy source bundle ("mvn -DperformRelease=true" must have been run previously) -->
    <fileSet>
      <directory>target</directory>
      <outputDirectory>src</outputDirectory>
      <includes>
          <include>mule-*-src.zip</include>
      </includes>
    </fileSet>
    
    <!--
    ============================
        Examples
    ============================
    -->

    <!--
    The entire examples directory is copied over first, then for each example, the contents 
    of the "dist" directory (README.txt, pom.xml, build.xml) are copied over, followed by
    the executable scripts.
    -->
    <fileSet>
        <directory>../../../examples</directory>
        <outputDirectory>examples</outputDirectory>
        <excludes>
            <exclude>pom.xml</exclude>
            <exclude>all-examples/**</exclude>
            <exclude>hello-osgi/**</exclude>
            <exclude>**/target/**</exclude> 
            <exclude>**/dist/**</exclude>
            <exclude>**/.*/**</exclude>
            <exclude>**/*.iml</exclude>
            <exclude>**/*.ipr</exclude>
            <exclude>**/*.iws</exclude>
            <!-- Exclude the webapp tests because Ant is not smart enough to deal 
                with multiple Jetty versions. -->
            <exclude>webapp/src/test/**</exclude>
        </excludes>
    </fileSet>

    <!--
    ============================
        Mule Examples: Echo
    ============================
    -->
    <fileSet>
        <directory>../../../examples/echo/dist</directory>
        <outputDirectory>examples/echo</outputDirectory>
    </fileSet>
    <fileSet>
        <directory>../../../examples/echo/dist</directory>
        <outputDirectory>examples/echo</outputDirectory>
        <fileMode>755</fileMode>
        <includes>
            <include>echo</include>
            <include>echo.bat</include>
        </includes>
    </fileSet>

    <!--
    ==================================
        Mule Examples: Error Handler
    ==================================
    -->
    <fileSet>
        <directory>../../../examples/errorhandler/dist</directory>
        <outputDirectory>examples/errorhandler</outputDirectory>
    </fileSet>
    <fileSet>
        <directory>../../../examples/errorhandler/dist</directory>
        <outputDirectory>examples/errorhandler</outputDirectory>
        <fileMode>755</fileMode>
        <includes>
            <include>errorhandler</include>
            <include>errorhandler.bat</include>
        </includes>
    </fileSet>

    <!--
    ============================
        Mule Examples: Hello
    ============================
    -->
    <fileSet>
        <directory>../../../examples/hello/dist</directory>
        <outputDirectory>examples/hello</outputDirectory>
    </fileSet>
    <fileSet>
        <directory>../../../examples/hello/dist</directory>
        <outputDirectory>examples/hello</outputDirectory>
        <fileMode>755</fileMode>
        <includes>
            <include>hello</include>
            <include>hello.bat</include>
        </includes>
    </fileSet>

    <!--
    ===============================
        Mule Examples: Loan Broker
    ===============================
    -->
    <fileSet>
        <directory>../../../examples/loanbroker/dist</directory>
        <outputDirectory>examples/loanbroker</outputDirectory>
    </fileSet>
    <fileSet>
        <directory>../../../examples/loanbroker/dist</directory>
        <outputDirectory>examples/loanbroker</outputDirectory>
        <fileMode>755</fileMode>
        <includes>
            <include>loanbroker</include>
            <include>loanbroker.bat</include>
        </includes>
    </fileSet>
    <!-- Common classes -->      
    <fileSet>
        <directory>../../../examples/loanbroker/common/dist</directory>
        <outputDirectory>examples/loanbroker/common</outputDirectory>
    </fileSet>
    <fileSet>
        <directory>../../../examples/loanbroker/common-tests/dist</directory>
        <outputDirectory>examples/loanbroker/common-tests</outputDirectory>
    </fileSet>
    <!-- Credit Agency EJB -->      
    <fileSet>
        <directory>../../../examples/loanbroker/credit-agency/dist</directory>
        <outputDirectory>examples/loanbroker/credit-agency</outputDirectory>
    </fileSet>
    <!-- LoanBroker ESB -->      
    <fileSet>
        <directory>../../../examples/loanbroker/esb/dist</directory>
        <outputDirectory>examples/loanbroker/esb</outputDirectory>
    </fileSet>
    <!-- OpenEJB needs a direct path to the openejb.conf file (i.e., it can't find it from within a jar) -->
    <fileSet>
        <directory>../../../examples/loanbroker/esb/src/main/resources</directory>
        <outputDirectory>lib/user</outputDirectory>
        <includes>
            <include>openejb.conf</include>
            <include>castor.properties</include>
        </includes>
    </fileSet>
    <!-- LoanBroker ESN -->      
    <fileSet>
        <directory>../../../examples/loanbroker/esn/dist</directory>
        <outputDirectory>examples/loanbroker/esn</outputDirectory>
    </fileSet>
    <!-- LoanBroker BPM -->      
    <fileSet>
        <directory>../../../examples/loanbroker/bpm/dist</directory>
        <outputDirectory>examples/loanbroker/bpm</outputDirectory>
    </fileSet>

    <!--
    =============================
        Mule Examples: Scripting
    =============================
    -->
    <fileSet>
        <directory>../../../examples/scripting/dist</directory>
        <outputDirectory>examples/scripting</outputDirectory>
    </fileSet>
    <fileSet>
        <directory>../../../examples/scripting/dist</directory>
        <outputDirectory>examples/scripting</outputDirectory>
        <fileMode>755</fileMode>
        <includes>
            <include>scripting</include>
            <include>scripting.bat</include>
        </includes>
    </fileSet>

    <!--
    ===============================
        Mule Examples: Stock Quote
    ===============================
    -->
    <fileSet>
        <directory>../../../examples/stockquote/dist</directory>
        <outputDirectory>examples/stockquote</outputDirectory>
    </fileSet>
    <fileSet>
        <directory>../../../examples/stockquote/dist</directory>
        <outputDirectory>examples/stockquote</outputDirectory>
        <fileMode>755</fileMode>
        <includes>
            <include>stockquote</include>
            <include>stockquote.bat</include>
        </includes>
    </fileSet>

    <!--
    ============================
        Mule Examples: Webapp
    ============================
    -->
    <fileSet>
        <directory>../../../examples/webapp/dist</directory>
        <outputDirectory>examples/webapp</outputDirectory>
    </fileSet>
    <!-- Copy configs from other examples -->
    <fileSet>
        <directory>../../../examples/echo/conf</directory>
        <outputDirectory>examples/webapp/conf</outputDirectory>
        <includes>
            <include>echo-config.xml</include>
        </includes>
    </fileSet>
    <fileSet>
        <directory>../../../examples/hello/conf</directory>
        <outputDirectory>examples/webapp/conf</outputDirectory>
        <includes>
            <include>hello-http-config.xml</include>
        </includes>
    </fileSet>
    <fileSet>
        <directory>../../../examples/loanbroker/esn/conf</directory>
        <outputDirectory>examples/webapp/conf</outputDirectory>
        <includes>
            <include>loan-broker-sync-config.xml</include>
            <include>loan-broker-vm-endpoints-config.xml</include>
        </includes>
    </fileSet>
    <fileSet>
        <directory>../../../examples/stockquote/conf</directory>
        <outputDirectory>examples/webapp/conf</outputDirectory>
        <includes>
            <include>stockquote-rest-config.xml</include>
        </includes>
    </fileSet>

      <!--
      ============================
          Mule Tools: Visualizer
      ============================
      -->

      <fileSet>
          <directory>../../../tools/visualizer/win32</directory>
          <outputDirectory>lib/native/visualizer</outputDirectory>
      </fileSet>
      <fileSet>
          <directory>../../../tools/visualizer/src/main/resources/bin</directory>
          <outputDirectory>bin</outputDirectory>
          <fileMode>755</fileMode>
          <includes>
              <include>launcher</include>
              <include>launcher.bat</include>
              <include>visualizer</include>
              <include>visualizer.bat</include>
          </includes>
      </fileSet>
      <fileSet>
          <directory>../../../tools/visualizer/src/main/resources/bin</directory>
          <outputDirectory>bin</outputDirectory>
          <includes>
              <include>launcher.conf</include>
              <include>visualizer.groovy</include>
          </includes>
      </fileSet>

  </fileSets>

    <!--
    ============================
        Libraries
    ============================
    -->

  <!--
       TODO: http://jira.codehaus.org/browse/MASSEMBLY-41 is now fixed.
       Update to use wildcards.

       Unfortunately we still cannot use wildcards, see
       http://jira.codehaus.org/browse/MASSEMBLY-220
  -->
  <dependencySets>
    <!-- Mule bootstrap -->
    <dependencySet>
      <outputDirectory>lib/boot</outputDirectory>
      <!-- No version number  -->
      <outputFileNameMapping>${artifactId}.${extension}</outputFileNameMapping>
      <includes>
        <include>org.mule.modules:mule-module-boot</include>
        <include>commons-cli:commons-cli</include>
        <include>tanukisoft:wrapper</include>
        <include>org.knopflerfish:framework</include>
      </includes>
      <!-- no XML -->
      <excludes>
          <exclude>xml-apis:xml-apis</exclude>
          <exclude>xerces:xercesImpl</exclude>
          <exclude>xerces:xml-serializer</exclude>
          <exclude>xalan:xalan</exclude>
      </excludes>
    </dependencySet>

    <!-- Mule libraries -->
    <dependencySet>
      <outputDirectory>lib/mule</outputDirectory>
      <!-- No version number  -->
      <outputFileNameMapping>${artifactId}.${extension}</outputFileNameMapping>
      <scope>runtime</scope>
      <includes>
        <!-- Core -->
        <include>org.mule:mule-core</include>
        <!-- Transports -->
        <include>org.mule.transports:mule-transport-axis</include>
        <include>org.mule.transports:mule-transport-bpm</include>
        <include>org.mule.transports:mule-transport-cxf</include>
        <include>org.mule.transports:mule-transport-ejb</include>
        <include>org.mule.transports:mule-transport-email</include>
        <include>org.mule.transports:mule-transport-file</include>
        <include>org.mule.transports:mule-transport-ftp</include>
        <include>org.mule.transports:mule-transport-http</include>
        <include>org.mule.transports:mule-transport-jbpm</include>
        <include>org.mule.transports:mule-transport-jdbc</include>
        <include>org.mule.transports:mule-transport-jms</include>
        <include>org.mule.transports:mule-transport-multicast</include>
        <include>org.mule.transports:mule-transport-quartz</include>
        <include>org.mule.transports:mule-transport-rmi</include>
        <include>org.mule.transports:mule-transport-soap</include>
        <include>org.mule.transports:mule-transport-ssl</include>
        <include>org.mule.transports:mule-transport-stdio</include>
        <include>org.mule.transports:mule-transport-tcp</include>
        <include>org.mule.transports:mule-transport-udp</include>
        <include>org.mule.transports:mule-transport-vm</include>
        <include>org.mule.transports:mule-transport-xmpp</include>
        <!-- Modules -->
        <include>org.mule.modules:mule-module-acegi</include>
        <include>org.mule.modules:mule-module-builders</include>
        <include>org.mule.modules:mule-module-client</include>
        <include>org.mule.modules:mule-module-jaas</include>
        <include>org.mule.modules:mule-module-jbossts</include>
        <include>org.mule.modules:mule-module-management</include>
        <include>org.mule.modules:mule-module-ognl</include>
        <include>org.mule.modules:mule-module-osgi</include>
        <include>org.mule.modules:mule-module-pgp</include>
        <include>org.mule.modules:mule-module-scripting</include>
        <include>org.mule.modules:mule-module-spring-config</include>
        <include>org.mule.modules:mule-module-spring-extras</include>
        <!-- MULE-2917 -->
        <!-- include>org.mule.modules:mule-module-wssecurity</include -->
        <include>org.mule.modules:mule-module-xml</include>
        <!-- Tools -->
        <include>org.mule.tools:mule-tools-visualizer</include>
      </includes>
      <excludes>
        <!-- no XML -->
        <exclude>xml-apis:xml-apis</exclude>
        <exclude>xerces:xercesImpl</exclude>
        <exclude>xerces:xml-serializer</exclude>
        <exclude>xalan:xalan</exclude>
    </excludes>
    </dependencySet>

    <!-- 3rd-party libraries -->
    <!-- 
    When a new 3rd party library is added to the distro, it must be added in 3 places:
       1. distributions/osgi/all-bundles/pom.xml
       2. distributions/server/full/assembly.xml
       3. distributions/server/src/main/resources/conf/init.xargs
    -->
    <dependencySet>
      <outputDirectory>lib/opt</outputDirectory>
      <!-- No version number  -->
      <outputFileNameMapping>${artifactId}.${extension}</outputFileNameMapping>
      <includes>
        <!-- Spring IoC -->
        <include>org.springframework:spring-core</include>
        <include>org.springframework:spring-beans</include>
        <include>org.springframework:spring-context</include>
        <!-- Spring OSGi -->
        <include>org.springframework.osgi:spring-osgi-core</include>
        <include>org.springframework.osgi:spring-osgi-io</include>
        <include>org.springframework.osgi:spring-osgi-extender</include>
        <include>org.springframework:spring-aop</include>
        <include>aopalliance:aopalliance.osgi</include>
        <!-- PAX Logging -->
        <include>org.ops4j.pax.logging:pax-logging-api</include>
        <include>org.ops4j.pax.logging:pax-logging-service</include> 
        <!-- Re-packaged by Mule for OSGi -->
        <include>backport-util-concurrent:backport-util-concurrent.osgi</include> 
        <include>org.apache.geronimo.specs:geronimo-j2ee-connector.osgi</include> 
        <include>org.apache.geronimo.specs:geronimo-jta.osgi</include> 
      </includes>
      <!-- no XML -->
      <excludes>
          <exclude>xml-apis:xml-apis</exclude>
          <exclude>xerces:xercesImpl</exclude>
          <exclude>xerces:xml-serializer</exclude>
          <exclude>xalan:xalan</exclude>

        <!-- MULE-3044: exclude the wsdl4j artifact from the axis transport -->
        <exclude>axis:axis-wsdl4j</exclude>
      </excludes>
    </dependencySet>

    <!-- Mule examples -->
    <dependencySet>
      <outputDirectory>lib/user</outputDirectory>
      <scope>runtime</scope>
      <!-- Don't put the version number in the examples. -->
      <outputFileNameMapping>${artifactId}.${extension}</outputFileNameMapping>
      <includes>
        <include>org.mule.examples:mule-example-echo</include>
        <include>org.mule.examples:mule-example-errorhandler</include>
        <include>org.mule.examples:mule-example-hello</include>
        <include>org.mule.examples:mule-example-loanbroker-common</include>
        <include>org.mule.examples:mule-example-loanbroker-esn</include>
        <include>org.mule.examples:mule-example-loanbroker-esb</include>
        <include>org.mule.examples:mule-example-loanbroker-bpm</include>
        <include>org.mule.examples:mule-example-loanbroker-credit-agency</include>
        <include>org.mule.examples:mule-example-scripting</include>
        <include>org.mule.examples:mule-example-stockquote</include>
      </includes>
      <!-- no XML -->
      <excludes>
          <exclude>xml-apis:xml-apis</exclude>
          <exclude>xerces:xercesImpl</exclude>
          <exclude>xerces:xml-serializer</exclude>
          <exclude>xalan:xalan</exclude>
      </excludes>
    </dependencySet>

    <dependencySet>
      <outputDirectory>lib/user</outputDirectory>
      <!-- No version number  -->
      <outputFileNameMapping>${artifactId}.${extension}</outputFileNameMapping>
      <scope>test</scope>
      <includes>
        <include>org.mule.tests:mule-tests-core</include>
        <include>org.mule.tests:mule-tests-functional</include>
      </includes>
      <!-- no XML -->
      <excludes>
          <exclude>xml-apis:xml-apis</exclude>
          <exclude>xerces:xercesImpl</exclude>
          <exclude>xerces:xml-serializer</exclude>
          <exclude>xalan:xalan</exclude>
      </excludes>
    </dependencySet>

    <!--
        These XML dependencies end up in the "endorsed" directory
        and must be excluded from other dependencySets, otherwise
        the inclusions here will cause other artifacts to pull them
        in as well. If that happens, the MAVP blacklisting mechanism
        should kick in, since only jars in the endorsed directory are
        explicitly blacklisted by full path.
    -->
    <dependencySet>
      <outputDirectory>lib/endorsed</outputDirectory>
      <includes>
          <include>xml-apis:xml-apis</include>
          <include>xerces:xercesImpl</include>
          <include>xerces:xml-serializer</include>
          <include>xalan:xalan</include>
      </includes>
   </dependencySet>

  </dependencySets>
</assembly>
