<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>
    <bean id="muleManager" class="org.mule.extras.spring.config.AutowireUMOManagerFactoryBean"/>

    <bean id="muleNameProcessor" class="org.mule.extras.spring.config.MuleObjectNameProcessor"/>

    <bean id="muleEnvironmentProperties" class="java.util.HashMap">
        <constructor-arg>
            <map>
                <!-- Whether mule transfromers should use compression when sending and recieving messages -->
                <entry key="doCompression"><value>true</value></entry>
                <entry key="beanProperty1"><value>this was set from the manager properties!</value></entry>
                <entry key="OS Version"><value>${os.version}</value></entry>
                <entry key="system-prop2"><value>default</value></entry>
            </map>
        </constructor-arg>
    </bean>
    <bean id="defaultThreadingProfile" class="org.mule.config.ThreadingProfile">
        <property name="maxBufferSize"><value>0</value></property>
        <property name="maxThreadsActive"><value>8</value></property>
        <property name="maxThreadsIdle"><value>4</value></property>
        <property name="threadTTL"><value>60001</value></property>
        <property name="poolExhaustedAction"><value>0</value></property>
    </bean>
    <bean id="poolingProfile" class="org.mule.config.PoolingProfile">
        <property name="maxWait"><value>4000</value></property>
        <property name="maxActive"><value>8</value></property>
        <property name="maxIdle"><value>4</value></property>
        <property name="initialisationPolicy"><value>1</value></property>
        <property name="exhaustedAction"><value>2</value></property>
    </bean>
    <bean id="queueProfile" class="org.mule.config.QueueProfile">
        <property name="maxOutstandingMessages"><value>100</value></property>
        <property name="persistent"><value>true</value></property>
    </bean>
    <bean id="queuePS" class="org.mule.util.queue.FilePersistenceStrategy"/>
    <bean id="muleConfiguration" class="org.mule.config.MuleConfiguration">
        <property name="defaultThreadingProfile"><ref local="defaultThreadingProfile"/></property>
        <property name="poolingProfile"><ref local="poolingProfile"/></property>
        <property name="queueProfile"><ref local="queueProfile"/></property>
        <property name="synchronous"><value>true</value></property>
        <property name="model"><value>test-model</value></property>
	    <property name="persistenceStrategy"><ref local="queuePS"/></property>
    </bean>

    <bean id="muleEndpointIdentifiers" class="java.util.HashMap">
        <constructor-arg>
            <map>
                <entry key="AppleQueue"><value>test://apple.queue</value></entry>
	            <entry key="Banana Queue"><value>test://banana.queue</value></entry>
	            <entry key="Test Queue"><value>test://test.queue</value></entry>
            </map>
        </constructor-arg>
    </bean>

    <bean id="transactionManagerFactory" class="org.mule.tck.testmodels.mule.TestTransactionManagerFactory"/>

    <bean id="jmxAgent" class="org.mule.management.agents.JmxAgent"/>

    <bean id="dummyConnector" class="org.mule.tck.testmodels.mule.TestConnector">
        <property name="exceptionListener">
            <bean id="connectorES" class="org.mule.tck.testmodels.mule.TestExceptionStrategy"/>
        </property>
        <property name="connectionStrategy">
            <bean id="connectionStrategy" class="org.mule.providers.SimpleRetryConnectionStrategy">
                <property name="retryCount"><value>4</value></property>
                <property name="frequency"><value>3000</value></property>
            </bean>
        </property>
        <property name="dispatcherThreadingProfile">
            <bean id="vmDispatcherThreadingProfile" class="org.mule.config.ThreadingProfile">
                <property name="maxBufferSize"><value>2</value></property>
                <property name="poolExhaustedAction"><value>4</value></property>
            </bean>
        </property>
    </bean>

    <bean id="defaultExceptionStrategy" class="org.mule.impl.DefaultExceptionStrategy"/>

    <bean id="dummyExceptionStrategy" class="org.mule.tck.testmodels.mule.TestExceptionStrategy">
        <property name="endpoints">
            <list>
            <bean class="org.mule.impl.endpoint.MuleEndpoint">
                <property name="endpointURI">
                    <bean class="org.mule.impl.endpoint.MuleEndpointURI">
                        <constructor-arg><value>test://component.exceptions</value></constructor-arg>
                    </bean>
               </property>
            </bean>
            </list>
        </property>
    </bean>

    <!-- transaformers -->
        <bean id="TestCompressionTransformer" singleton="false" class="org.mule.tck.testmodels.mule.TestCompressionTransformer">
            <property name="name"><value>TestCompressionTransformer</value></property>
            <property name="containerProperty"><value> </value></property>
            <!-- setting this property is a hack to simulate the org.mule.useManagerProperties
            feature which isn't supported in spring-->
            <property name="beanProperty1"><value>this was set from the manager properties!</value></property>
            <property name="returnClass"><value>java.lang.String</value></property>
            <property name="beanProperty2"><value>12</value></property>
        </bean>


    <bean id="fruitBowlEndpoint" singleton="false" class="org.mule.impl.endpoint.MuleEndpoint">
        <property name="connector"><ref local="dummyConnector"/></property>
        <property name="endpointURI">
            <bean class="org.mule.impl.endpoint.MuleEndpointURI">
                <constructor-arg><value>test://fruitBowlPublishQ</value></constructor-arg>
                <property name="filter">
                    <bean class="org.mule.routing.filters.xml.JXPathFilter">
                        <property name="expression"><value>name</value></property>
                        <property name="value"><value>bar</value></property>
                        <property name="namespaces"><map>
                            <entry key="foo"><value>http://foo.com</value></entry>
                        </map></property>
                    </bean></property>
            </bean>
       </property>
    </bean>

    <bean id="waterMelonEndpoint" singleton="false" class="org.mule.impl.endpoint.MuleEndpoint">
        <property name="connector"><ref local="dummyConnector"/></property>
        <property name="endpointURI">
            <bean class="org.mule.impl.endpoint.MuleEndpointURI">
                <constructor-arg><value>Test Queue</value></constructor-arg>
            </bean>
       </property>
    </bean>

    <bean id="appleInEndpoint" singleton="false" class="org.mule.impl.endpoint.MuleEndpoint">
        <property name="connector"><ref local="dummyConnector"/></property>
        <property name="type"><value>receiver</value></property>
        <property name="endpointURI">
            <bean class="org.mule.impl.endpoint.MuleEndpointURI">
                <constructor-arg><value>test://AppleQueue</value></constructor-arg>
            </bean>
       </property>
    </bean>

    <bean id="appleResponseEndpoint" singleton="false" class="org.mule.impl.endpoint.MuleEndpoint">
        <property name="connector"><ref local="dummyConnector"/></property>
        <property name="type"><value>receiver</value></property>
        <property name="endpointURI">
            <bean class="org.mule.impl.endpoint.MuleEndpointURI">
                <constructor-arg><value>test://AppleResponseQueue</value></constructor-arg>
            </bean>
       </property>
    </bean>

    <bean id="orangeEndpoint" singleton="false" class="org.mule.impl.endpoint.MuleEndpoint">
        <property name="connector"><ref local="dummyConnector"/></property>
        <property name="endpointURI">
            <bean class="org.mule.impl.endpoint.MuleEndpointURI">
                <constructor-arg><value>test://orangeQ</value></constructor-arg>
            </bean>
       </property>
    </bean>

    <bean id="transactedInboundEndpoint" singleton="false" class="org.mule.impl.endpoint.MuleEndpoint">
        <property name="connector"><ref local="dummyConnector"/></property>
        <property name="createConnector"><value>1</value></property>
        <property name="endpointURI">
            <bean class="org.mule.impl.endpoint.MuleEndpointURI">
                <constructor-arg><value>test://endpoint.in2</value></constructor-arg>
            </bean>
       </property>
        <property name="type"><value>receiver</value></property>
        <property name="transactionConfig"><ref local="transactedInbound-transaction"/></property>
        <property name="properties">
            <map>
                <entry key="testEndpointProperty"><value>Prop1</value></entry>
            </map>
        </property>
    </bean>

    <bean id="dummyTransactionFactory" class="org.mule.tck.testmodels.mule.TestTransactionFactory"/>

    <bean id="transactedInbound-transaction" class="org.mule.impl.MuleTransactionConfig">
        <property name="action"><value>1</value></property>
        <property name="factory"><ref local="dummyTransactionFactory"/></property>
    </bean>

    <bean id="transactedOutboundEndpoint" singleton="false" class="org.mule.impl.endpoint.MuleEndpoint">
        <property name="connector"><ref local="dummyConnector"/></property>
        <property name="endpointURI">
            <bean class="org.mule.impl.endpoint.MuleEndpointURI">
                <constructor-arg><value>test://endpoint.out</value></constructor-arg>
            </bean>
        </property>
        <property name="type"><value>sender</value></property>
        <property name="transactionConfig"><ref local="transactedOutbound-transaction"/></property>
    </bean>

    <bean id="transactedOutbound-transaction" class="org.mule.impl.MuleTransactionConfig">
<!--        <property name="commitActionAsString"><value>ALWAYS_COMMIT</value></property>-->
<!--        <property name="constraint">-->
<!--            <bean id="batchConstraint" class="org.mule.transaction.constraints.BatchConstraint">-->
<!--                <property name="batchSize"><value>3</value></property>-->
<!--            </bean>-->
<!--        </property>-->
    </bean>

    <bean id="default" class="org.mule.interceptors.InterceptorStack">
        <property name="interceptors">
            <list>
                <ref local="loggingInterceptor"/>
                <ref local="timerInterceptor"/>
            </list>
        </property>
    </bean>

    <bean id="loggingInterceptor" class="org.mule.interceptors.LoggingInterceptor"/>
    <bean id="timerInterceptor" class="org.mule.interceptors.TimerInterceptor"/>

    <bean id="entryPointResolver" class="org.mule.tck.testmodels.mule.TestEntryPointResolver"/>

    <bean id="lifecycleAdapterFactory" class="org.mule.tck.testmodels.mule.TestDefaultLifecycleAdapterFactory"/>

    <!-- by default the componet builder will use this context to resolve objects, though you can
    specify a different context config if you want -->
	<bean id="containerContext" class="org.mule.extras.spring.SpringContainerContext"/>

	<bean id="orangeComponent" class="org.mule.impl.MuleDescriptor">
        <property name="outboundEndpoint"><ref local="appleInEndpoint"/></property>
        <property name="outboundTransformer"><ref local="TestCompressionTransformer"/></property>
        <property name="implementation"><value>local:orange</value></property>
        <property name="inboundRouter">
            <bean id="orangeInboundMessageRouter" class="org.mule.routing.inbound.InboundMessageRouter">
                <property name="catchAllStrategy">
                    <bean class="org.mule.routing.ForwardingCatchAllStrategy">
                        <property name="endpoint">
                            <bean class="org.mule.impl.endpoint.MuleEndpoint">
                                <property name="endpointURI">
                                    <bean class="org.mule.impl.endpoint.MuleEndpointURI">
                                        <constructor-arg><value>test://catch.all</value></constructor-arg>
                                    </bean>
                               </property>
                            </bean>
                        </property>
                    </bean>
                </property>
                <property name="endpoints">
                    <list>
<!--                        <ref local="orangeEndpoint"/>-->
                        <bean name="orangeEndpoint" singleton="false" class="org.mule.impl.endpoint.MuleEndpoint">
                            <property name="connector"><ref local="dummyConnector"/></property>
                            <property name="endpointURI">
                                <bean class="org.mule.impl.endpoint.MuleEndpointURI">
                                    <constructor-arg><value>test://orangeQ</value></constructor-arg>
                                </bean>
                           </property>
                           <property name="transformer">
                                <ref local="TestCompressionTransformer"/>
                            </property>
                        </bean>

                        <bean id="Orange" singleton="false" class="org.mule.impl.endpoint.MuleEndpoint">
                            <property name="connector"><ref local="dummyConnector"/></property>
                            <property name="type"><value>sender</value></property>
                            <property name="endpointURI">
                                <bean class="org.mule.impl.endpoint.MuleEndpointURI">
                                    <constructor-arg><value>test://orange/</value></constructor-arg>
                                </bean>
                           </property>
                        </bean>
                    </list>
                </property>
            </bean>
        </property>

        <property name="responseRouter">
            <bean class="org.mule.routing.response.ResponseMessageRouter">
                <property name="transformer">
                    <ref local="TestCompressionTransformer"/>
                </property>
                <property name="endpoints">
                    <list>
                        <bean id="response1" singleton="false" class="org.mule.impl.endpoint.MuleEndpoint">
                            <property name="endpointURI">
                                <bean class="org.mule.impl.endpoint.MuleEndpointURI">
                                    <constructor-arg><value>test://response1</value></constructor-arg>
                                </bean>
                           </property>
                        </bean>
                        <bean id="appleResponse" class="org.mule.impl.endpoint.MuleEndpoint" factory-method="getEndpointFromUri">
                            <constructor-arg index="0">
                                <value>appleResponseEndpoint</value>
                            </constructor-arg>
                        </bean>
                    </list>
                </property>
                <property name="routers">
                    <list>
                        <bean class="org.mule.tck.testmodels.mule.TestResponseAggregator"/>
                    </list>
                </property>
            </bean>
        </property>

        <property name="interceptors">
            <list>
                <ref local="default"/>
                <ref local="timerInterceptor"/>
            </list>
        </property>
        <property name="properties">
            <map>
                <entry key="orange">
                    <bean id="orangeRef" class="org.mule.tck.testmodels.fruit.Orange"/>
                </entry>
                <entry key="brand"><value>Juicy Baby!</value></entry>
                <entry key="segments"><value>9</value></entry>
                <entry key="radius"><value>4.21</value></entry>
                <entry key="mapProperties">
                    <map>
                        <entry key="prop1"><value>prop1</value></entry>
                        <entry key="prop2"><value>prop2</value></entry>
                    </map>
                </entry>
                <entry key="listProperties">
                    <list>
                        <value>prop1</value>
                        <value>prop2</value>
                        <value>prop3</value>
                    </list>
                </entry>
                <entry key="arrayProperties">
                    <list>
                        <value>prop4</value>
                        <value>prop5</value>
                        <value>prop6</value>
                    </list>
                </entry>
            </map>
        </property>
        <property name="exceptionListener">
            <bean class="org.mule.impl.DefaultComponentExceptionStrategy">
                <property name="endpoints">
                    <list>
                    <bean class="org.mule.impl.endpoint.MuleEndpoint">
                        <property name="endpointURI">
                            <bean class="org.mule.impl.endpoint.MuleEndpointURI">
                                <constructor-arg><value>test://orange.exceptions</value></constructor-arg>
                            </bean>
                       </property>
                    </bean>
                    </list>
                </property>
            </bean>
        </property>
	</bean>

    <bean id="appleComponent" class="org.mule.impl.MuleDescriptor">
        <property name="inboundEndpoint"><ref local="appleInEndpoint"/></property>
        <property name="outboundEndpoint"><ref local="waterMelonEndpoint"/></property>
        <property name="implementation"><value>org.mule.tck.testmodels.fruit.Apple</value></property>
        <property name="interceptors">
            <list>
                <ref local="loggingInterceptor"/>
            </list>
        </property>
        <property name="outboundRouter"><ref local="testOutboundMessageRouter"/></property>
        <property name="inboundRouter"><ref local="testInboundMessageRouter"/></property>
        
        <property name="exceptionListener"><bean class="org.mule.impl.DefaultExceptionStrategy"/></property>
   </bean>

    <bean id="appleComponent2" class="org.mule.impl.MuleDescriptor">
        <property name="implementation"><value>apple</value></property>
        <property name="inboundRouter">
            <bean class="org.mule.routing.inbound.InboundMessageRouter">
                <property name="endpoints">
                    <list>
                        <ref local="transactedInboundEndpoint"/>
                    </list>
                </property>
            </bean>
        </property>
        <property name="outboundRouter">
            <ref local="apple2OutboundRouter"/>
        </property>
        <property name="interceptors">
            <list>
                <ref local="loggingInterceptor"/>
            </list>
        </property>
        <property name="threadingProfile">
            <bean id="localThreadingProfile" class="org.mule.config.ThreadingProfile">
                <property name="maxBufferSize"><value>6</value></property>
                <property name="maxThreadsActive"><value>12</value></property>
                <property name="maxThreadsIdle"><value>6</value></property>
                <property name="poolExhaustedAction"><value>4</value></property>
            </bean>
        </property>
        <property name="poolingProfile">
            <bean id="localPoolingProfile" class="org.mule.config.PoolingProfile">
                <property name="maxWait"><value>4000</value></property>
                <property name="maxActive"><value>5</value></property>
                <property name="maxIdle"><value>5</value></property>
                <property name="initialisationPolicy"><value>2</value></property>
                <property name="exhaustedAction"><value>2</value></property>
            </bean>
        </property>
        <property name="queueProfile">
            <bean id="localQueueProfile" class="org.mule.config.QueueProfile">
                <property name="maxOutstandingMessages"><value>102</value></property>
            </bean>
        </property>
   </bean>

    <bean id="apple2OutboundRouter" class="org.mule.routing.outbound.OutboundMessageRouter">
        <property name="routers">
            <list>
                <bean class="org.mule.routing.outbound.FilteringOutboundRouter">
                    <property name="endpoints">
                        <list>
                             <ref local="transactedOutboundEndpoint"/>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="testInboundMessageRouter" class="org.mule.routing.inbound.InboundMessageRouter">
        <property name="catchAllStrategy">
            <bean id="testInboundCatchAllStrategy" class="org.mule.tck.testmodels.mule.TestCatchAllStrategy"/>
        </property>
        <property name="routers">
            <list>
                <bean id="inRouter1" class="org.mule.routing.inbound.SelectiveConsumer">
                    <property name="filter">
                        <bean id="infilter1" class="org.mule.routing.filters.PayloadTypeFilter">
                            <property name="expectedType"><value>java.lang.String</value></property>
                        </bean>
                    </property>
                </bean>
                <bean id="inRouter2" class="org.mule.routing.inbound.IdempotentReceiver"/>
            </list>
        </property>
    </bean>

    <bean id="testOutboundMessageRouter" class="org.mule.routing.outbound.OutboundMessageRouter">
        <property name="catchAllStrategy">
            <bean id="testOutboundCatchAllStrategy" class="org.mule.tck.testmodels.mule.TestCatchAllStrategy"/>
        </property>
        <property name="routers">
            <list>
                <bean id="router1" class="org.mule.routing.outbound.FilteringOutboundRouter">
                    <property name="endpoints">
                        <list>
                            <ref local="transactedOutboundEndpoint"/>
                        </list>
                    </property>
                    <property name="filter">
                        <bean id="filter1" class="org.mule.routing.filters.PayloadTypeFilter">
                            <property name="expectedType"><value>java.lang.String</value></property>
                        </bean>
                    </property>
                    <property name="transformer">
                        <ref local="TestCompressionTransformer"/>
                    </property>
                </bean>
                <bean id="router2" class="org.mule.routing.outbound.FilteringOutboundRouter">
                    <property name="endpoints"><list><ref local="transactedOutboundEndpoint"/></list></property>
                    <property name="filter">
                        <bean id="outfilter1" class="org.mule.routing.filters.logic.AndFilter">
                            <property name="leftFilter">
                                <bean id="router2.left.filter" class="org.mule.routing.filters.RegExFilter">
                                    <property name="pattern"><value>the quick brown (.*)</value></property>
                                </bean>
                            </property>
                            <property name="rightFilter">
                                <bean id="router2.right.filter" class="org.mule.routing.filters.RegExFilter">
                                    <property name="pattern"><value>(.*) brown (.*)</value></property>
                                </bean>
                            </property>
                        </bean>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="test-model" class="org.mule.impl.MuleModel">
        <property name="entryPointResolver"><ref local="entryPointResolver"/></property>
        <property name="lifecycleAdapterFactory"><ref local="lifecycleAdapterFactory"/></property>
        <property name="exceptionListener"><ref local="dummyExceptionStrategy"/></property>
	</bean>

    <!-- components that are used by referencing the container throught the builder -->
    <bean id="fruitBowl" class="org.mule.tck.testmodels.fruit.FruitBowl">
        <property name="fruit">
            <list>
                <ref local="apple"/>
                <ref local="banana"/>
            </list>
        </property>
    </bean>

    <bean id="apple" class="org.mule.tck.testmodels.fruit.Apple"/>

    <bean id="banana" class="org.mule.tck.testmodels.fruit.Banana"/>

</beans>