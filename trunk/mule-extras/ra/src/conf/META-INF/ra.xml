<?xml version="1.0" encoding="UTF-8"?>
<connector xmlns="http://java.sun.com/xml/ns/j2ee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee
    http://java.sun.com/xml/ns/j2ee/connector_1_5.xsd"
    version="1.5">
    <description>Mule Universal Resource Adapter</description>
    <display-name>Mule Universal Resource Adapter</display-name>
    <vendor-name>SymphonySoft Ltd</vendor-name>
    <eis-type>Mule</eis-type>
    <resourceadapter-version>1.0</resourceadapter-version>
    <license>
        <description>
            Copyright 2005 (c) SymphonySoft Limited. All rights reserved.
            http://www.symphonysoft.com

            The software in this package is published under the terms of the BSD
            style license a copy of which has been included with this distribution in
            the LICENSE.txt file.
        </description>
        <license-required>true</license-required>
    </license>
    <resourceadapter>
        <resourceadapter-class>org.mule.ra.MuleResourceAdapter</resourceadapter-class>
        <config-property>
            <description>
            A comma separated list of configuration resources to configure a Mule Manager instance.
            These can be a list of files on the classpath or filesystem.  And the type of file
            referenced depends on the configurationBuilder set on this Adapter.
            </description>
            <config-property-name>configurations</config-property-name>
            <config-property-type>java.lang.String</config-property-type>
        </config-property>
        <config-property>
            <description>
            A fully qualified classname of the configuration builder.
            Mule has Xml, Spring and Groovy configuration builders. By default This
            ResourceAdapter will use org.mule.config.builder.MuleXmlconfigurationBuilder.
            If there is a Mule instance already available to this ResourceAdapter this
            property will be ignored.
            </description>
            <config-property-name>configurationBuilder</config-property-name>
            <config-property-type>java.lang.String</config-property-type>
        </config-property>
        <config-property>
            <description>The default user name that will be used to log on to the Mule server.</description>
            <config-property-name>UserName</config-property-name>
            <config-property-type>java.lang.String</config-property-type>
            <config-property-value>defaultUser</config-property-value>
        </config-property>
        <config-property>
            <description>The password for the default User.</description>
            <config-property-name>Password</config-property-name>
            <config-property-type>java.lang.String</config-property-type>
            <config-property-value>defaultPassword</config-property-value>
        </config-property>
        <outbound-resourceadapter>
            <connection-definition>
                <managedconnectionfactory-class>org.mule.ra.muleManagedConnectionFactory</managedconnectionfactory-class>
                <connectionfactory-interface>org.mule.ra.MuleConnectionFactory</connectionfactory-interface>
                <connectionfactory-impl-class>org.mule.ra.DefaultMuleConnectionFactory</connectionfactory-impl-class>
                <connection-interface>org.mule.ra.MuleConnection</connection-interface>
                <connection-impl-class>org.mule.ra.DefaultMuleConnection</connection-impl-class>
            </connection-definition>
            <transaction-support>NoTransaction</transaction-support>
<!--            <transaction-support>XATransaction</transaction-support>-->
            <authentication-mechanism>
                <authentication-mechanism-type>BasicPassword</authentication-mechanism-type>
                <credential-interface>javax.resource.spi.security.PasswordCredential</credential-interface>
            </authentication-mechanism>
            <reauthentication-support>false</reauthentication-support>
        </outbound-resourceadapter>
        <inbound-resourceadapter>
            <messageadapter>
                <messagelistener>
                    <messagelistener-type>org.mule.umo.UMOEventListener</messagelistener-type>
                    <activationspec>
                        private Properties propertiesMap;
    private String endpointName;
    private String connectorName;
    private int createConnector;
    private MuleResourceAdapter resourceAdapter;
    private UMOEndpointURI endpoint;
                        <activationspec-class>org.mule.ra.MuleActivationSpec</activationspec-class>
                        <required-config-property>
                            <description>
                            A valid Mule endpoint URI such as,
                            pop3://user:password@mail.host.com or
                            vm://test.component
                            </description>
                            <config-property-name>endpoint</config-property-name>
                        </required-config-property>
                        <optional-config-property>
                            <description>
                            A comma-separated list of key/value property pairs that can be used
                            to pass transport-specific properties to an endpoint. Note this can be done
                            b setting params on the endpoint property itself.
                            </description>
                            <config-property-name>propertiesMap</config-property-name>
                        </required-config-property>

                    </activationspec>
                </messagelistener>
            </messageadapter>
        </inbound-resourceadapter>
        <adminobject>
            <adminobject-interface>javax.jms.Queue</adminobject-interface>
            <adminobject-class>org.codehaus.activemq.message.ActiveMQQueue</adminobject-class>
            <config-property>
                <config-property-name>PhysicalName</config-property-name>
                <config-property-type>java.lang.String</config-property-type>
            </config-property>
        </adminobject>
        <adminobject>
            <adminobject-interface>javax.jms.Topic</adminobject-interface>
            <adminobject-class>org.codehaus.activemq.message.ActiveMQTopic</adminobject-class>
            <config-property>
                <config-property-name>PhysicalName</config-property-name>
                <config-property-type>java.lang.String</config-property-type>
            </config-property>
        </adminobject>
    </resourceadapter>
</connector>
