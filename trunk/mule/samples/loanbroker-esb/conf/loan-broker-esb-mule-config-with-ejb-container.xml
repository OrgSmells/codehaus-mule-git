<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mule-configuration PUBLIC "-//SymphonySoft //DTD mule-configuration XML V1.0//EN"
                                "http://www.symphonysoft.com/dtds/mule/mule-configuration.dtd">

<!--  This is the configuration for the Loan Broker ESB example -->
<!-- See http://mule.codehaus.org/LoanBroker  for more information, diagrams and even a presentation! -->

<mule-configuration id="Mule_Loan_broker_ESB_with_Ejb_Container" version="1.0">

    <description>
    The Loan Broker ESB example implements the Loan Broker Example using an ESB topology.
    See http://mule.codehaus.org/LoanBroker+ESB for details.

    Instead of using an ejb Connector as in the other configuration (see mule-config.xml in this directory)
    We configure an EJB container context and reference the EJB session bean directly as a Mule Managed component
    The advantage of using an EjbContainerContext over an Ejb Connector is that the container is early binding where as
    connector is only invoked once an event is received for the referenced Ejb.
    </description>

    <container-context className="org.mule.impl.container.EjbContainerContext">
        <properties>
            <property name="securityPolicy" value="security.policy"/>
            <map name="environment">
                <property name="java.naming.factory.initial" value="org.openejb.client.LocalInitialContextFactory"/>
                <property name="java.naming.provider.url" value="rmi://localhost:1099"/>
                <property name="openejb.base" value="."/>
                <property name="openejb.configuration" value="../conf/openejb.conf"/>
                <property name="openejb.nobanner" value="true"/>
            </map>
        </properties>
    </container-context>

    <connector name="jmsConnector" className="org.mule.providers.jms.JmsConnector">
        <properties>
            <property name="connectionFactoryJndiName" value="ConnectionFactory"/>
            <property name="jndiInitialFactory" value="org.activemq.jndi.ActiveMQInitialContextFactory"/>
            <property name="specification" value="1.1"/>
            <map name="connectionFactoryProperties">
                <property name="brokerURL" value="tcp://localhost:61616"/>
                <property name="useEmbeddedBroker" value="true"/>
            </map>
        </properties>
    </connector>

    <endpoint-identifiers>
        <endpoint-identifier name="LoanBrokerRequestsREST" value="jetty:rest://localhost:8080/loanbroker"/>
        <endpoint-identifier name="LoanBrokerRequests" value="vm://loan.broker.requests"/>
        <endpoint-identifier name="LoanQuotes" value="jms://esb.loan.quotes"/>
        <endpoint-identifier name="CreditAgencyGateway" value="jms://esb.credit.agency"/>

        <!-- Thus is the endpoint used to pass events to the Credit Agency Ejb
        Notice we set the 'method' param on the endpoint. This is because we need to tell
        Mule which meothod to invoke as Mule cannot introspect the EJB proxy -->
        <endpoint-identifier name="CreditAgency" value="vm://credit.agency.service?method=getCreditProfile"/>
        <endpoint-identifier name="LenderGateway" value="jms://esb.lender.service"/>
        <endpoint-identifier name="LenderService" value="vm://lender.service"/>
        <endpoint-identifier name="BankingGateway" value="jms://esb.banks"/>
        <endpoint-identifier name="Bank1" value="axis:http://localhost:10080/mule"/>
        <endpoint-identifier name="Bank2" value="axis:http://localhost:20080/mule"/>
        <endpoint-identifier name="Bank3" value="axis:http://localhost:30080/mule"/>
        <endpoint-identifier name="Bank4" value="axis:http://localhost:40080/mule"/>
        <endpoint-identifier name="Bank5" value="axis:http://localhost:50080/mule"/>
    </endpoint-identifiers>

    <transformers>
        <transformer name="RestRequestToCustomerRequest" className="org.mule.samples.loanbroker.esb.transformers.RestRequestToCustomerRequest"/>
        <transformer name="LoanQuoteRequestToCustomer" className="org.mule.samples.loanbroker.esb.transformers.LoanQuoteRequestToCustomer"/>
        <transformer name="LoanQuoteRequestToCreditProfileArgs" className="org.mule.samples.loanbroker.esb.transformers.LoanQuoteRequestToCreditProfileArgs"/>
        <transformer name="CreditProfileXmlToCreditProfile" className="org.mule.samples.loanbroker.esb.transformers.CreditProfileXmlToCreditProfile"/>
    </transformers>

    <!--
        The Mule model initialises and manages your UMO components
    -->
    <model name="loan-broker">
        <!--
        The loan broker is used to receive loan requests
        -->
        <mule-descriptor name="LoanBroker"
            implementation="org.mule.samples.loanbroker.esb.LoanBroker">

            <inbound-router>
                <endpoint address="LoanBrokerRequestsREST" transformers="RestRequestToCustomerRequest"/>
                <endpoint address="LoanBrokerRequests"/>
            </inbound-router>

            <outbound-router>
                <router className="org.mule.routing.outbound.OutboundPassThroughRouter">
                    <endpoint address="CreditAgencyGateway"/>
                </router>
            </outbound-router>

            <response-router timeout="1000000">
                <endpoint address="LoanQuotes"/>
                <router className="org.mule.samples.loanbroker.esb.routers.BankQuotesResponseAggregator"/>
            </response-router>
        </mule-descriptor>

        <!--
        The credit agency service will get the credit profile for a customer
        -->
        <mule-descriptor name="CreditAgencyGateway"
            implementation="org.mule.components.builder.ReflectionMessageBuilder">

            <inbound-router>
                <endpoint address="CreditAgencyGateway"/>
            </inbound-router>

            <outbound-router>
                <router className="org.mule.routing.outbound.FilteringOutboundRouter">
                    <!-- We invoke the credit Agency service using remoteSync which means that a response
                    will be returned from the service. there is also a responseTransformer that will
                    conver the Xml returned from the CreditAgency Ejb into a CreditProfile object -->
                    <endpoint remoteSync="true" transformers="LoanQuoteRequestToCreditProfileArgs"
                        responseTransformers="CreditProfileXmlToCreditProfile" address="CreditAgency"/>
                    <endpoint address="LenderGateway"/>
                </router>
            </outbound-router>
        </mule-descriptor>

        <!--  This is the CreditAgency Ejb component.  The implementation is the Jndi naming location
        of the the Home interface for the CreditAgency bean.  This is just a single inbound endpoint which
        with return the result of the invocation
        -->
        <mule-descriptor name="CreditAgency" implementation="local/CreditAgency">
            <inbound-router>
                <endpoint address="CreditAgency"/>
            </inbound-router>
        </mule-descriptor>

        <mule-descriptor name="LenderGateway"
                         implementation="org.mule.components.simple.BridgeComponent">

            <inbound-router>
                <endpoint address="LenderGateway"/>
            </inbound-router>

            <outbound-router>
                <router className="org.mule.routing.outbound.ChainingRouter">
                    <endpoint remoteSync="true" address="LenderService"/>
                    <endpoint address="BankingGateway"/>
                </router>
            </outbound-router>
        </mule-descriptor>

        <mule-descriptor name="LenderService"
                         implementation="org.mule.samples.loanbroker.esb.lender.LenderService">

            <inbound-router>
                <endpoint address="LenderService"/>
            </inbound-router>
        </mule-descriptor>

        <mule-descriptor name="BankingGateway"
            implementation="org.mule.components.simple.BridgeComponent">

            <inbound-router>
                <endpoint address="BankingGateway"/>
            </inbound-router>

            <outbound-router>
                <router className="org.mule.routing.outbound.StaticRecipientList">
                    <reply-to address="LoanQuotes"/>
                </router>
            </outbound-router>
        </mule-descriptor>

        <!--
        These are mock bank services that represent remote bank loan services
        One or more of these are selected by the LenderService and a request
        is routed to them.   The lenderService outbound router also defines a
        replyTo property which will be used by Mule to route the responses back
        to the LoanBrokerQuotes destination
        -->
        <mule-descriptor name="Bank1"
            inboundEndpoint="Bank1"
            implementation="org.mule.samples.loanbroker.esb.bank.Bank">
        </mule-descriptor>

        <mule-descriptor name="Bank2"
            inboundEndpoint="Bank2"
            implementation="org.mule.samples.loanbroker.esb.bank.Bank">
        </mule-descriptor>

        <mule-descriptor name="Bank3"
            inboundEndpoint="Bank3"
            implementation="org.mule.samples.loanbroker.esb.bank.Bank">
        </mule-descriptor>

        <mule-descriptor name="Bank4"
            inboundEndpoint="Bank4"
            implementation="org.mule.samples.loanbroker.esb.bank.Bank">
        </mule-descriptor>

        <mule-descriptor name="Bank5"
            inboundEndpoint="Bank5"
            implementation="org.mule.samples.loanbroker.esb.bank.Bank">
        </mule-descriptor>
    </model>
</mule-configuration>