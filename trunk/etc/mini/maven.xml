<project default="multiproject:install"
    xmlns:j="jelly:core"
    xmlns:u="jelly:util"
    xmlns:ant="jelly:ant"
    xmlns:maven="jelly:maven">

    <goal name="minimule" prereqs="clean,mule:release-prepare,mule:libs-copy,all-jars,mule:samples,mule:zip-release"
        description="Creates and zips build for distribution"/>

    <goal name="all-jars" prereqs="setvars">

        <echo>Base dir is ${basedir}</echo>
        <echo>Copying Mule libs from ${mule.release.lib.dir} to ${mule.release.dist.dir}</echo>
        <copy todir="${mule.release.dist.dir}">
            <fileset dir="${mule.release.lib.dir}">
                <include name="mule-*"/>
            </fileset>
        </copy>

        <delete>
            <fileset dir="${base.release.lib.dir}" includes="mule-*"/>
        </delete>

        <echo>About to copy Mule jars to ${mule.release.dist.dir}</echo>
        <mkdir dir="${mule.release.dist.dir}"/>
        <mkdir dir="${mule.release.dist.dir}/temp"/>
        <fileScanner var="mulejars">
            <fileset dir="${mule.release.dist.dir}">
                <include name="**/mule-*${pom.currentVersion}.jar"/>
            </fileset>
        </fileScanner>

        <delete>
            <fileset dir="${mule.release.lib.dir}">
                <include name="**/mule-*.jar"/>
            </fileset>
        </delete>

        <mkdir dir="${mule.release.dist.dir}/temp"/>
        <j:forEach var="jarfile" items="${mulejars.iterator()}">
            <echo>jar is ${jarfile}</echo>
            <copy file="${jarfile}" todir="${mule.release.dist.dir}"/>
            <unjar src="${jarfile}" dest="${mule.release.dist.dir}/temp"/>
        </j:forEach>

        <!-- unjar the core jar again to overlay the correct manifest -->
        <unjar src="${mule.release.dist.dir}/mule-core-${pom.currentVersion}.jar" dest="${mule.release.dist.dir}/temp"/>
        <!-- Mark the mini distrobution -->
        <replace file="${mule.release.dist.dir}/temp/META-INF/MANIFEST.MF" token="Universal Message Objects" value="Universal Message Objects (mini)"/>

        <copy file="${mule.release.dist.dir}/temp/META-INF/MANIFEST.MF" tofile="${mule.release.dist.dir}/temp/META-INF/Mule.mf"/>

        <delete>
            <fileset dir="${mule.release.dist.dir}" includes="*.jar"/>
        </delete>
        <echo>creating jar: ${mule.release.lib.dir}/mule-${pom.currentVersion}</echo>
        <jar manifest="${mule.release.dist.dir}/temp/META-INF/MANIFEST.MF" basedir="${mule.release.dist.dir}/temp" destfile="${mule.release.lib.dir}/mule-${pom.currentVersion}.jar"/>
        <delete dir="${mule.release.dist.dir}/temp"/>

        <copy todir="${mule.release.dist.dir}">
            <fileset file="${basedir}/../../mule/src/conf/mule-configuration.dtd"/>
        </copy>

        <copy todir="${mule.release.dir}" file="${basedir}/../../LICENSE.txt"/>
        <copy todir="${mule.release.dir}" file="${basedir}/README.txt"/>

        <mkdir dir="${mule.release.dir}/bin"/>
        <copy todir="${mule.release.dir}/bin">
           <fileset dir="${basedir}/../../bin"/>
        </copy>
    </goal>

    <!--=================================================-->
    <!--          Mule Release TARGETS                   -->
    <!--=================================================-->

    <goal name="setvars">
        <j:set var="mule.release.dir" value="${maven.build.dir}\release"/>
        <j:set var="mule.release.lib.dir" value="${mule.release.dir}\lib"/>
        <j:set var="mule.release.samples.dir" value="${mule.release.dir}\samples"/>
        <j:set var="mule.release.dist.dir" value="${mule.release.dir}\dist"/>
        <echo>Release dir is ${mule.release.dir}</echo>
    </goal>

    <goal name="mule:release-prepare" prereqs="setvars">
        <echo>About to create lib and bin directories in ${mule.release.dir}</echo>
        <mkdir dir="${mule.release.dir}"/>
        <mkdir dir="${mule.release.dist.dir}"/>
        <mkdir dir="${mule.release.samples.dir}"/>
        <mkdir dir="${mule.release.lib.dir}"/>
        <mkdir dir="${mule.release.lib.dir}/licenses"/>
        <delete dir="${maven.build.dir}"/>
    </goal>

    <postGoal name="test:test">
        <j:if test="${context.getVariable('maven.test.skip') == null || context.getVariable('maven.test.skip') == 'false'}">
            <echo>Setting maven.test.skip to true, so that tests do not run again!</echo>
            <j:expr value="${context.setVariable('maven.test.skip', 'true')}"/>
        </j:if>
    </postGoal>

    <goal name="mule:samples" prereqs="setvars">

        <echo>copying samples from ${basedir}/../../target/release/samples to ${mule.release.samples.dir}</echo>
        <copy todir="${mule.release.samples.dir}">
            <fileset dir="${basedir}/../../target/release/samples"/>
        </copy>
        <delete dir="${mule.release.samples.dir}/errorhandler"/>
        <delete dir="${mule.release.samples.dir}/voipservice"/>
        <delete dir="${mule.release.samples.dir}/loanbroker-esb"/>

        <!-- copy config overrides that do not use non-mini-mule jars -->
        <echo>Copying smple config overrides from ${basedir}/samples</echo>
        <j:set var="samples.dist" value="${maven.build.dir}/release/samples"/>
        <copy overwrite="true" todir="${samples.dist}/echo/conf" file="${basedir}/samples/echo/echo-mule-config.xml"/>

        <copy overwrite="true" todir="${samples.dist}/loanbroker/conf" file="${basedir}/samples/loanbroker/loan-broker-async-config.xml"/>
        <copy overwrite="true" todir="${samples.dist}/loanbroker/conf" file="${basedir}/samples/loanbroker/loan-broker-sync-config.xml"/>

        <copy overwrite="true" todir="${samples.dist}/mule-webapp" file="${basedir}/samples/mule-webapp/maven.xml"/>
        <copy overwrite="true" todir="${samples.dist}/mule-webapp" file="${basedir}/samples/mule-webapp/project.xml"/>
        <copy overwrite="true" todir="${samples.dist}/mule-webapp/webapp/WEB-INF" file="${basedir}/samples/mule-webapp/mule-loanbroker-config.xml"/>

	<replace file="${samples.dist}/mule-webapp/maven.xml" token="@VERSION@" value="${pom.currentVersion}"/>

        <delete file="${samples.dist}/mule-webapp/webapp/WEB-INF/mule-loanbroker-async-config.xml"/>
        <delete includeemptydirs="true">
            <fileset dir="${samples.dist}/hello">
                <include name="**/*spring*"/>
                <include name="**/*http*"/>
            </fileset>
        </delete>
        <delete includeemptydirs="true">
            <fileset dir="${samples.dist}/stockqoute">
                <include name="**/*soap*"/>
            </fileset>
        </delete>

    </goal>

    <goal name="mule:zip-release" prereqs="setvars">
        <mkdir dir="${maven.build.dir}/distributions"/>
        <!--<zip zipfile="${maven.build.dir}/distributions/${maven.final.name}-dist.zip">
            <zipfileset dir="${mule.release.dir}" prefix="${maven.final.name}"/>
        </zip>-->
        <ant:fixcrlf srcdir="${mule.release.dir}" eol="crlf" eof="doc" includes="*.bat" excludes="*.jar"/>
        <ant:fixcrlf srcdir="${mule.release.dir}/bin" eol="lf" eof="unix" includes="mule" excludes="*.bat"/>
        <ant:fixcrlf srcdir="${mule.release.dir}" eol="lf" eof="unix" includes="*.sh" excludes="*.bat"/>

        <ant:chmod perm="ugo+rx">
          <ant:fileset dir="${mule.release.dir}">
            <ant:include name="**/bin/*.sh"/>
            <ant:include name="bin/mule"/>
          </ant:fileset>
        </ant:chmod>

        <tar compression="gzip" tarfile="${maven.build.dir}/distributions/${maven.final.name}-dist.tar.gz" longfile="gnu">
            <tarfileset dir="${mule.release.dir}" mode="755" prefix="${maven.final.name}">
                <include name="samples/*/bin/*.sh"/>
                <include name="bin/mule"/>
            </tarfileset>
            <tarfileset dir="${mule.release.dir}" prefix="${maven.final.name}">
                <include name="**"/>
                <exclude name="samples/*/bin/*.sh"/>
                <exclude name="bin/mule"/>
            </tarfileset>
        </tar>

        <!-- zip up  -->
        <zip zipfile="${maven.build.dir}/distributions/${maven.final.name}-dist.zip">
            <zipfileset dir="${mule.release.dir}" prefix="${maven.final.name}"/>
        </zip>
    </goal>

    <goal name="mule:libs-copy">

        <echo>Copying project dependencies for ${pom.artifactId}, package ${pom.package}</echo>
        <j:forEach var="lib" items="${pom.dependencies}">
            <j:if test="${lib.getProperty('ignore')!='true'}">
                <j:if test="${lib.getProperty('mule.mini')=='true'}">
                    <mkdir dir="${basedir}/../../target/release/lib/${pom.artifactId}"/>
                    <copy todir="${mule.release.lib.dir}"
                        file="${maven.repo.local}/${lib.artifactDirectory}/jars/${lib.getArtifact()}"/>
                    <u:available file="${basedir}/../../licenses/${lib.artifactId}.license">
                        <copy todir="${mule.release.lib.dir}/licenses"
                            file="${basedir}/../../licenses/${lib.artifactId}.license"/>
                    </u:available>
                    <u:available file="${basedir}/../../licenses/${lib.groupId}.license">
                        <copy todir="${mule.release.lib.dir}/licenses"
                            file="${basedir}/../../licenses/${lib.groupId}.license"/>
                    </u:available>
                </j:if>
            </j:if>
        </j:forEach>
<!--        <copy todir="${mule.release.lib.dir}/licenses">-->
<!--            <fileset dir="${basedir}/../../licenses"/>-->
<!--        </copy>-->

    </goal>
    <!--=================================================-->
    <!--                DEPLY TARGETS                  -->
    <!--=================================================-->
    <goal name="mule:deploy">
        <exec dir="${maven.build.dir}/distributions" executable="${maven.scp.executable}">
            <arg line="${maven.scp.args} * ${maven.username}@${pom.siteAddress}:${pom.siteDirectory}/../dist/distributions/"/>
        </exec>
    </goal>
</project>